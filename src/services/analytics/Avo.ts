// Generated by Avo VERSION 116.215.0. You should never have to make changes to this file.
// If you find yourself in the situation where you have to edit the file please contact us at hi@avo.app.
// If you encounter a git conflict in this file run `avo pull` and it will be resolved automatically.
/* tslint:disable */
/* eslint-disable */
// @ts-nocheck

// fetch() polyfill
(function () {
  if (typeof window === 'undefined') {
    return;
  }
  var support = {
    searchParams: 'URLSearchParams' in self,
    iterable: 'Symbol' in self && 'iterator' in Symbol,
    blob:
      'FileReader' in self &&
      'Blob' in self &&
      (function () {
        try {
          new Blob();
          return true
        } catch (e) {
          return false
        }
      })(),
    formData: 'FormData' in self,
    arrayBuffer: 'ArrayBuffer' in self
  };

  function isDataView(obj: any) {
    return obj && DataView.prototype.isPrototypeOf(obj)
  }

  if (support.arrayBuffer) {
    var viewClasses = [
      '[object Int8Array]',
      '[object Uint8Array]',
      '[object Uint8ClampedArray]',
      '[object Int16Array]',
      '[object Uint16Array]',
      '[object Int32Array]',
      '[object Uint32Array]',
      '[object Float32Array]',
      '[object Float64Array]'
    ];

    var isArrayBufferView =
      ArrayBuffer.isView ||
      function (obj) {
        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1
      };
  }

  function normalizeName(name: any) {
    if (typeof name !== 'string') {
      name = String(name);
    }
    if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
      throw new TypeError('Invalid character in header field name')
    }
    return name.toLowerCase()
  }

  function normalizeValue(value: any) {
    if (typeof value !== 'string') {
      value = String(value);
    }
    return value
  }

  // Build a destructive iterator for the value list
  function iteratorFor(items: any) {
    var iterator: any = {
      next: function () {
        var value = items.shift();
        return { done: value === undefined, value: value }
      }
    };

    if (support.iterable) {
      iterator[Symbol.iterator] = function () {
        return iterator
      };
    }

    return iterator
  }

  function Headers(headers: any) {
    // @ts-ignore
    (this as any).map = {};

    if (headers instanceof Headers) {
      (headers as any).forEach(function (value: any, name: any) {
        // @ts-ignore
        this.append(name, value);
        // @ts-ignore
      }, this);
    } else if (Array.isArray(headers)) {
      headers.forEach(function (header: any) {
        // @ts-ignore
        this.append(header[0], header[1]);
        // @ts-ignore
      }, this);
    } else if (headers) {
      Object.getOwnPropertyNames(headers).forEach(function (name: any) {
        // @ts-ignore
        this.append(name, headers[name]);
        // @ts-ignore
      }, this);
    }
  }

  Headers.prototype.append = function (name: any, value: any) {
    name = normalizeName(name);
    value = normalizeValue(value);
    var oldValue = this.map[name];
    this.map[name] = oldValue ? oldValue + ', ' + value : value;
  };

  Headers.prototype['delete'] = function (name: any) {
    delete this.map[normalizeName(name)];
  };

  Headers.prototype.get = function (name: any) {
    name = normalizeName(name);
    return this.has(name) ? this.map[name] : null
  };

  Headers.prototype.has = function (name: any) {
    return this.map.hasOwnProperty(normalizeName(name))
  };

  Headers.prototype.set = function (name: any, value: any) {
    this.map[normalizeName(name)] = normalizeValue(value);
  };

  Headers.prototype.forEach = function (callback: any, thisArg: any) {
    for (var name in this.map) {
      if (this.map.hasOwnProperty(name)) {
        callback.call(thisArg, this.map[name], name, this);
      }
    }
  };

  Headers.prototype.keys = function () {
    var items: any = [];
    this.forEach(function (_value: any, name: any) {
      items.push(name);
    });
    return iteratorFor(items)
  };

  Headers.prototype.values = function () {
    var items: any = [];
    this.forEach(function (value: any) {
      items.push(value);
    });
    return iteratorFor(items)
  };

  Headers.prototype.entries = function () {
    var items: any = [];
    this.forEach(function (value: any, name: any) {
      items.push([name, value]);
    });
    return iteratorFor(items)
  };

  if (support.iterable) {
    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
  }

  function consumed(body: any) {
    if (body.bodyUsed) {
      return true;
    }
    body.bodyUsed = true;
    return false;
  }

  function fileReaderReady(reader: any) {
    return new Promise(function (resolve: any, reject: any) {
      reader.onload = function () {
        resolve(reader.result);
      };
      reader.onerror = function () {
        reject(reader.error);
      };
    })
  }

  function readBlobAsArrayBuffer(blob: any) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsArrayBuffer(blob);
    return promise
  }

  function readBlobAsText(blob: any) {
    var reader = new FileReader();
    var promise = fileReaderReady(reader);
    reader.readAsText(blob);
    return promise
  }

  function readArrayBufferAsText(buf: any) {
    var view = new Uint8Array(buf);
    var chars = new Array(view.length);

    for (var i = 0; i < view.length; i++) {
      chars[i] = String.fromCharCode(view[i]!);
    }
    return chars.join('')
  }

  function bufferClone(buf: any) {
    if (buf.slice) {
      return buf.slice(0)
    } else {
      var view = new Uint8Array(buf.byteLength);
      view.set(new Uint8Array(buf));
      return view.buffer
    }
  }

  function Body() {
    // @ts-ignore
    (this as any).bodyUsed = false;

    // @ts-ignore
    (this as any)._initBody = function (body: any) {
      this._bodyInit = body;
      if (!body) {
        this._bodyText = '';
      } else if (typeof body === 'string') {
        this._bodyText = body;
      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
        this._bodyBlob = body;
      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
        this._bodyFormData = body;
      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
        this._bodyText = body.toString();
      } else if (support.arrayBuffer && support.blob && isDataView(body)) {
        this._bodyArrayBuffer = bufferClone(body.buffer);
        // IE 10-11 can't handle a DataView body.
        this._bodyInit = new Blob([this._bodyArrayBuffer]);
      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
        this._bodyArrayBuffer = bufferClone(body);
      } else {
        this._bodyText = body = Object.prototype.toString.call(body);
      }

      if (!this.headers.get('content-type')) {
        if (typeof body === 'string') {
          this.headers.set('content-type', 'text/plain;charset=UTF-8');
        } else if (this._bodyBlob && this._bodyBlob.type) {
          this.headers.set('content-type', this._bodyBlob.type);
        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
      }
    };

    if (support.blob) {
      // @ts-ignore
      (this as any).blob = function () {
        var rejected = consumed(this);
        if (rejected) {
          return Promise.reject(new TypeError('Already read'));
        }

        if (this._bodyBlob) {
          return Promise.resolve(this._bodyBlob);
        } else if (this._bodyArrayBuffer) {
          return Promise.resolve(new Blob([this._bodyArrayBuffer]));
        } else if (this._bodyFormData) {
          throw new Error('could not read FormData body as blob');
        } else {
          return Promise.resolve(new Blob([this._bodyText]));
        }
      };

      // @ts-ignore
      (this as any).arrayBuffer = function () {
        if (this._bodyArrayBuffer) {
          if (consumed(this)) {
            return Promise.reject(new TypeError('Already read'));
          } else {
            return Promise.resolve(this._bodyArrayBuffer);
          }
        } else {
          return this.blob().then(readBlobAsArrayBuffer);
        }
      };
    }

    // @ts-ignore
    (this as any).text = function () {
      var rejected = consumed(this);
      if (rejected) {
        return Promise.reject(new TypeError('Already read'));
      }

      if (this._bodyBlob) {
        return readBlobAsText(this._bodyBlob);
      } else if (this._bodyArrayBuffer) {
        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
      } else if (this._bodyFormData) {
        throw new Error('could not read FormData body as text');
      } else {
        return Promise.resolve(this._bodyText);
      }
    };

    if (support.formData) {
      // @ts-ignore
      (this as any).formData = function () {
        return this.text().then(decode)
      };
    }

    // @ts-ignore
    (this as any).json = function () {
      return this.text().then(JSON.parse)
    };

    // @ts-ignore
    return this
  }

  // HTTP methods whose capitalization should be normalized
  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

  function normalizeMethod(method: any) {
    var upcased = method.toUpperCase();
    return methods.indexOf(upcased) > -1 ? upcased : method
  }

  function Request(input: any, options: any) {
    options = options || {};
    var body = options.body;

    if (input instanceof Request) {
      if ((input as any).bodyUsed) {
        throw new TypeError('Already read')
      }
      // @ts-ignore
      (this as any).url = (input as any).url;
      // @ts-ignore
      this.credentials = (input as any).credentials;
      if (!options.headers) {
        // @ts-ignore
        this.headers = new Headers((input as any).headers);
      }
      // @ts-ignore
      this.method = (input as any).method;
      // @ts-ignore
      this.mode = (input as any).mode;
      // @ts-ignore
      this.signal = (input as any).signal;
      if (!body && (input as any)._bodyInit != null) {
        body = (input as any)._bodyInit;
        (input as any).bodyUsed = true;
      }
    } else {
      // @ts-ignore
      this.url = String(input);
    }

    // @ts-ignore
    this.credentials = options.credentials || this.credentials || 'same-origin';
    // @ts-ignore
    if (options.headers || !this.headers) {
      // @ts-ignore
      this.headers = new Headers(options.headers);
    }
    // @ts-ignore
    this.method = normalizeMethod(options.method || this.method || 'GET');
    // @ts-ignore
    this.mode = options.mode || this.mode || null;
    // @ts-ignore
    this.signal = options.signal || this.signal;
    // @ts-ignore
    this.referrer = null;

    // @ts-ignore
    if ((this.method === 'GET' || this.method === 'HEAD') && body) {
      throw new TypeError('Body not allowed for GET or HEAD requests')
    }
    // @ts-ignore
    this._initBody(body);
  }

  Request.prototype.clone = function () {
    // @ts-ignore
    return new Request(this, { body: this._bodyInit })
  };

  function decode(body: any) {
    var form = new FormData();
    body
      .trim()
      .split('&')
      .forEach(function (bytes: any) {
        if (bytes) {
          var split = bytes.split('=');
          var name = split.shift().replace(/\+/g, ' ');
          var value = split.join('=').replace(/\+/g, ' ');
          form.append(decodeURIComponent(name), decodeURIComponent(value));
        }
      });
    return form
  }

  function parseHeaders(rawHeaders: any) {
    // @ts-ignore
    var headers = new Headers();
    // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
    // https://tools.ietf.org/html/rfc7230#section-3.2
    var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
    preProcessedHeaders.split(/\r?\n/).forEach(function (line: any) {
      var parts = line.split(':');
      var key = parts.shift().trim();
      if (key) {
        var value = parts.join(':').trim();
        headers.append(key, value);
      }
    });
    return headers
  }

  Body.call(Request.prototype);

  function Response(bodyInit: any, options: any) {
    if (!options) {
      options = {};
    }

    // @ts-ignore
    this.type = 'default';
    // @ts-ignore
    this.status = options.status === undefined ? 200 : options.status;
    // @ts-ignore
    this.ok = this.status >= 200 && this.status < 300;
    // @ts-ignore
    this.statusText = 'statusText' in options ? options.statusText : 'OK';
    // @ts-ignore
    this.headers = new Headers(options.headers);
    // @ts-ignore
    this.url = options.url || '';
    // @ts-ignore
    this._initBody(bodyInit);
  }

  Body.call(Response.prototype);

  Response.prototype.clone = function () {
    // @ts-ignore
    return new Response(this._bodyInit, {
      status: this.status,
      statusText: this.statusText,
      // @ts-ignore
      headers: new Headers(this.headers),
      url: this.url
    })
  };

  Response.error = function () {
    // @ts-ignore
    var response = new Response(null, { status: 0, statusText: '' });
    response.type = 'error';
    return response
  };

  var redirectStatuses = [301, 302, 303, 307, 308];

  Response.redirect = function (url: any, status: any) {
    if (redirectStatuses.indexOf(status) === -1) {
      throw new RangeError('Invalid status code')
    }

    // @ts-ignore
    return new Response(null, { status: status, headers: { location: url } })
  };

  (self as any).DOMException = (self as any).DOMException;
  try {
    new (self as any).DOMException();
  } catch (err) {
    (self as any).DOMException = function (message: any, name: any) {
      this.message = message;
      this.name = name;
      var error = Error(message);
      this.stack = error.stack;
    };
    (self as any).DOMException.prototype = Object.create(Error.prototype);
    (self as any).DOMException.prototype.constructor = (self as any).DOMException;
  }

  function fetch(input: any, init: any) {
    return new Promise(function (resolve, reject) {
      // @ts-ignore
      var request = new Request(input, init);

      if (request.signal && request.signal.aborted) {
        return reject(new (self as any).DOMException('Aborted', 'AbortError'))
      }

      var xhr = new XMLHttpRequest();

      function abortXhr() {
        xhr.abort();
      }

      xhr.onload = function () {
        var options = {
          status: xhr.status,
          statusText: xhr.statusText,
          headers: parseHeaders(xhr.getAllResponseHeaders() || '')
        };
        (options as any).url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
        var body = 'response' in xhr ? xhr.response : (xhr as any).responseText;
        // @ts-ignore
        resolve(new Response(body, options));
      };

      xhr.onerror = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.ontimeout = function () {
        reject(new TypeError('Network request failed'));
      };

      xhr.onabort = function () {
        reject(new (self as any).DOMException('Aborted', 'AbortError'));
      };

      xhr.open(request.method, request.url, true);

      if (request.credentials === 'include') {
        xhr.withCredentials = true;
      } else if (request.credentials === 'omit') {
        xhr.withCredentials = false;
      }

      if ('responseType' in xhr && support.blob) {
        xhr.responseType = 'blob';
      }

      request.headers.forEach(function (value: any, name: any) {
        xhr.setRequestHeader(name, value);
      });

      if (request.signal) {
        request.signal.addEventListener('abort', abortXhr);

        xhr.onreadystatechange = function () {
          // DONE (success or failure)
          if (xhr.readyState === 4) {
            request.signal.removeEventListener('abort', abortXhr);
          }
        };
      }

      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
    })
  }

  fetch.polyfill = true;

  if (!self.fetch) {
    (self as any).fetch = fetch;
    (self as any).Headers = Headers;
    (self as any).Request = Request;
    (self as any).Response = Response;
  }
})();

export enum AvoEnv {
  Prod = "prod",
  Dev = "dev",
}

export interface CustomDestination {
  make?(env: AvoEnv, apiKey: string): void;
  logEvent?: (eventName: string, eventProperties: Record<string, any>) => void;
  setUserProperties?: (userId: string, userProperties: Record<string, any>) => void;
  identify?: (userId: string) => void;
  unidentify?: () => void;
  logPage?: (pageName: string, eventProperties: Record<string, any>) => void;
  revenue?: (amount: number, eventProperties: Record<string, any>) => void;
  setGroupProperties?: (
    groupType: string,
    groupId: string,
    groupProperties: Record<string, any>,
  ) => void;
  addCurrentUserToGroup?: (
    groupType: string,
    groupId: string,
    groupProperties: Record<string, any>,
  ) => void;
  logEventWithGroups?: (
    eventName: string,
    eventProperties: any,
    groupTypesToGroupIds: Record<string, string>,
  ) => void;
}

// @ts-ignore
interface AvoAssertMessage {
  eventName?: string;
  tag?: string;
  propertyId?: string;
  message?: string;
  additionalProperties?: string[],
  shape?: any,
  shapeUserProps?: any,
  actualType?: string
}

let __AVO_ENV__: AvoEnv | null = null;
// @ts-ignore
let __AVO_NOOP__: boolean = false;
// @ts-ignore
let __AVO_LOGGER__: AvoLogger | null = null;
// @ts-ignore
let __STRICT__: boolean | null = null;
// @ts-ignore
let __REPORT_FAILURE_AS__: 'error' | 'warn' | 'log' | null = null;

// @ts-ignore
let __WEB_DEBUGGER__: boolean = true;
export const avoInspectorApiKey = "4XdQKuq2TN4mIVF4JmQE";
// @ts-ignore
interface AvoInspector {}
let __INSPECTOR__: AvoInspector | null = null;


// polyfill Object.assign
// @ts-ignore
declare interface ObjectConstructor {
  assign: any;
}
// @ts-ignore
if (typeof Object.assign !== 'function') {
  // Must be writable: true, enumerable: false, configurable: true
  Object.defineProperty(Object, "assign", {
    value: function assign(target: any, _varArgs: any) { // .length of function is 2
      if (target == null) { // TypeError if undefined or null
        throw new TypeError('Cannot convert undefined or null to object');
      }

      let to = Object(target);

      for (let index = 1; index < arguments.length; index++) {
        let nextSource = arguments[index];

        if (nextSource != null) { // Skip over if undefined or null
          for (let nextKey in nextSource) {
            // Avoid bugs when hasOwnProperty is shadowed
            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {
              to[nextKey] = nextSource[nextKey];
            }
          }
        }
      }
      return to;
    },
    writable: true,
    configurable: true
  });
}

interface AvoLogger {
  logDebug(env: AvoEnv | null, message: string): boolean;
  logWarn(env: AvoEnv | null, message: string): boolean;
  logError(env: AvoEnv | null, error: string): boolean;
}

enum webDebuggerArea {
  BottomRight = "BottomRight",
  BottomLeft = "BottomLeft",
  TopRight = "TopRight",
  TopLeft = "TopLeft"
}

interface bottomRightParameters {
  bottom: number;
  right: number;
}

interface bottomLeftParameters {
  bottom: number;
  left: number;
}

interface topRightParameters {
  top: number;
  right: number;
}

interface topLeftParameters {
  top: number;
  left: number;
}

interface webDebuggerPosition {
  position: webDebuggerArea;
  top?: number;
  right?: number;
  bottom?: number;
  left?: number;
}

interface webDebuggerOptions {
  position?: webDebuggerPosition;
}

interface WebDebuggerPositionSetter {
  BottomRight(p: bottomRightParameters): webDebuggerPosition;
  BottomLeft(p: bottomLeftParameters): webDebuggerPosition;
  TopRight(p: topRightParameters): webDebuggerPosition;
  TopLeft(p: topLeftParameters): webDebuggerPosition;
}

export const WebDebuggerPosition: WebDebuggerPositionSetter = {
  BottomRight: ({ bottom, right }) => ({
    position: webDebuggerArea.BottomRight,
    bottom,
    right,
  }),
  BottomLeft: ({ bottom, left }) => ({
    position: webDebuggerArea.BottomLeft,
    bottom,
    left,
  }),
  TopRight: ({ top, right }) => ({
    position: webDebuggerArea.TopRight,
    top,
    right,
  }),
  TopLeft: ({ top, left }) => ({
    position: webDebuggerArea.TopLeft,
    top,
    left,
  }),
}


let InternalAvoLogger: any = {
  logEventSent: function logEventSent(eventName: string, eventProperties: any, userProperties: any) {
    const message = "Event Sent:" + eventName + "Event Props:" + JSON.stringify(eventProperties) + "User Props:" + JSON.stringify(userProperties);

    if (__AVO_LOGGER__ && __AVO_LOGGER__.logDebug && __AVO_LOGGER__.logDebug(__AVO_ENV__, message)) {
      return
    }
    typeof console !== 'undefined' && console.log("[avo] Event Sent:", eventName, "Event Props:", eventProperties, "User Props:", userProperties);
  },

  log: function log(message: string) {
    if (__AVO_LOGGER__ && __AVO_LOGGER__.logDebug && __AVO_LOGGER__.logDebug(__AVO_ENV__, message)) {
      return
    }
    typeof console !== 'undefined' && console.log("[avo] " + message);
  },

  warn: function warn(message: string) {
    if (__AVO_LOGGER__ && __AVO_LOGGER__.logWarn && __AVO_LOGGER__.logWarn(__AVO_ENV__, message)) {
      return
    }
    typeof console !== 'undefined' && console.warn("[avo] " + message);
  },

  error: function error(message: string, error: string) {
    if (__AVO_LOGGER__ && __AVO_LOGGER__.logError && __AVO_LOGGER__.logError(__AVO_ENV__, message + error)) {
      return
    }
    typeof console !== 'undefined' && console.error("[avo] " + message, error);
  }
};

// @ts-ignore
let array_difference: any;
// @ts-ignore
let AvoAssert: any;
array_difference = function array_difference(a1: any[], a2: any[]) {
  let result: any[] = [];
  for (let i = 0; i < a1.length; i++) {
    if (a2.indexOf(a1[i]) === -1) {
      result.push(a1[i]);
    }
  }
  return result;
}

AvoAssert = {
  assertObject: function assertObject(propertyId: string, propName: string, obj: any) {
    if (typeof obj !== 'object') {
      let message = propName +
          ' should be of type object but you provided type ' +
          typeof obj +
          ' with value ' +
          JSON.stringify(obj);
      return [{tag: 'expectedObjectType', propertyId, message, actualType: typeof obj}];
    } else {
      return [];
    }
  },

  assertString: function assertString(propertyId: string, propName: string, str: string) {
    if (typeof str !== 'string') {
      let message = propName +
          ' should be of type string but you provided type ' +
          typeof str +
          ' with value ' +
          JSON.stringify(str);
      return [{tag: 'expectedStringType', propertyId, message, actualType: typeof str}];
    } else {
      return [];
    }
  },

  assertInt: function assertInt(propertyId: string, propName: string, int: number) {
    if (typeof int === 'number' && int !== Math.round(int)) {
      let message = propName +
          ' should be of type int but you provided type float with value ' +
          JSON.stringify(int);
      return [{tag: 'expectedIntType', propertyId, message, actualType: 'float'}];
    } else if (typeof int !== 'number') {
      let message = propName +
          ' should be of type int but you provided type ' +
          typeof int +
          ' with value ' +
          JSON.stringify(int);
      return [{tag: 'expectedIntType', propertyId, message, actualType: typeof int}];
    } else {
      return [];
    }
  },

  assertLong: function assertLong(propertyId: string, propName: string, long: number) {
    if (typeof long === 'number' && long !== Math.round(long)) {
      let message = propName +
          ' should be of type long but you provided type float with value ' +
          JSON.stringify(long);
      return [{tag: 'expectedLongType', propertyId, message, actualType: 'float'}];
    } else if (typeof long !== 'number') {
      let message = propName +
          ' should be of type long but you provided type ' +
          typeof long +
          ' with value ' +
          JSON.stringify(long);
      return [{tag: 'expectedLongType', propertyId, message, actualType: typeof long}];
    } else {
      return [];
    }
  },

  assertFloat: function assertFloat(propertyId: string, propName: string, float: number) {
    if (typeof float !== 'number') {
      let message = propName +
          ' should be of type float but you provided type ' +
          typeof float +
          ' with value ' +
          JSON.stringify(float);
      return [{tag: 'expectedFloatType', propertyId, message, actualType: typeof float}];
    } else {
      return [];
    }
  },

  assertBool: function assertBool(propertyId: string, propName: string, bool: boolean) {
    if (typeof bool !== 'boolean') {
      let message = propName +
          ' should be of type boolean but you provided type ' +
          typeof bool +
          ' with value ' +
          JSON.stringify(bool);
      return [{tag: 'expectedBoolType', propertyId, message, actualType: typeof bool}];
    } else {
      return [];
    }
  },

  assertMax: function assertMax(
    propertyId: string,
    propName: string,
    max: number,
    value: number
  ) {
    if (value > max) {
      let message = propName +
        ' has a maximum value of ' +
        max +
        ' but you provided the value ' +
        JSON.stringify(value);
      return [{tag: 'expectedMax', propertyId, message}];
    } else {
      return [];
    }
  },

  assertMin: function assertMin(
    propertyId: string,
    propName: string,
    min: number,
    value: number
  ) {
    if (value < min) {
      let message = propName +
        ' has a minimum value of ' +
        min +
        ' but you provided the value ' +
        JSON.stringify(value);
      return [{tag: 'expectedMin', propertyId, message}];
    } else {
      return [];
    }
  },

  assertList: function assertList(propertyId: string, propName: string, value: any) {
    if (!Array.isArray(value)) {
      let message = propName + ' should be of type list but you provided type ' + typeof value;
      return [{tag: 'expectedList', propertyId, message}];
    } else {
      return [];
    }
  },

  assertNoAdditionalProperties: function assertNoAdditionalProperties(eventName: string, input: string[], spec: string[]) {
    let additionalKeys = array_difference(input, spec);
    if (additionalKeys.length) {
      let message = "Additional properties when sending event " + eventName + ": " + JSON.stringify(additionalKeys);
      return [{tag: 'expectedNoAdditionalProperties', additionalProperties: additionalKeys, message: message}];
    } else {
      return [];
    }
  },

  assertNoAdditionalUserProperties: function assertNoAdditionalProperties(eventName: string, input: string[], spec: string[]) {
    let additionalKeys = array_difference(input, spec);
    if (additionalKeys.length) {
      let message = "Additional user properties when sending event " + eventName + ": " + JSON.stringify(additionalKeys);
      return [{tag: 'expectedNoAdditionalUserProperties', additionalProperties: additionalKeys, message: message}];
    } else {
      return [];
    }
  },
};

let _avo_invoke: any;
let _avo_invoke_meta: any;
let _avo_sampling_rate = 1.0;
_avo_invoke = function _avo_invoke(env: AvoEnv, eventId: string, hash: string, messages: {tag: string, propertyId: string}[], origin: string) {
  // @ts-ignore
  if (typeof (window as any) === 'undefined') { return; }
  if (_avo_sampling_rate > 0) {
    if (Math.random() < _avo_sampling_rate) {
      // @ts-ignore
      fetch("https://api.avo.app/i", {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({
          "ac": "550HJ56npwbgutwdbD0w",
          "br": "master",
          "en": env,
          "ev": eventId,
          "ha": hash,
          "sc": "HG3IQB5agPHQutHhkkLP",
          "se": (new Date()).toISOString(),
          "so": "ibmhSD4pa",
          "va": messages.length === 0,
          "me": messages,
          "or": origin
        })
      }).then(function(res: any) { return res.json(); }).then(function(data: any) { _avo_sampling_rate = data.sa; }).catch(function() {});
    }
  }
}

_avo_invoke_meta = function _avo_invoke_meta(env: AvoEnv, type: string, messages: {tag: string, propertyId: string}[], origin: string) {
  // @ts-ignore
  if (typeof (window as any) === 'undefined') { return; }
  if (_avo_sampling_rate > 0) {
    if (Math.random() < _avo_sampling_rate) {
      // @ts-ignore
      fetch("https://api.avo.app/i", {
        method: "POST",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({
          "ac": "550HJ56npwbgutwdbD0w",
          "br": "master",
          "en": env,
          "ty": type,
          "sc": "HG3IQB5agPHQutHhkkLP",
          "se": (new Date()).toISOString(),
          "so": "ibmhSD4pa",
          "va": messages.length === 0,
          "me": messages,
          "or": origin
        })
      }).then(function(res: any) { return res.json(); }).then(function(data: any) { _avo_sampling_rate = data.sa; }).catch(function() {});
    }
  }
}


let _avo_debugger_log: any;
let _avo_debugger_events_during_boot: any = [];
let _avo_debugger_ready = false;

if (typeof (window as any) !== 'undefined') {
  window.addEventListener("message", function(event) {
    if (event.origin !== "https://www.avo.app") {
      return;
    }
    let iframe: any = document.getElementById("avo-debugger");
    if (iframe && event && event.data && event.data.type_ === "avo-debugger-update-style") {
      iframe.style = event.data.style;
    } else if (iframe && event && event.data && event.data.type_ === "avo-debugger-ready") {
      let message = {
        type_: "avo-debugger-boot-events",
        schemaId: "HG3IQB5agPHQutHhkkLP",
        href: window.location.href,
        events: _avo_debugger_events_during_boot
      };
      _avo_debugger_events_during_boot = [];
      _avo_debugger_ready = true;
      iframe.contentWindow.postMessage(message, "https://www.avo.app/_debugger")
    }
  });
}

_avo_debugger_log = function _avo_debugger_log(eventId: string, eventName: string, messages: any[], eventProperties: any[], userProperties: any[], groupProperties: any[]) {
  if (typeof (window as any) === 'undefined') { return; }
  let event = {
    eventId: eventId,
    eventName: eventName,
    messages: messages,
    timestamp: Date.now(),
    eventProperties,
    userProperties,
    groupProperties
  };

  if (_avo_debugger_ready) {
    let message = {type_: "avo-debugger-events", events: [event]};
    (document.getElementById("avo-debugger") as any).contentWindow.postMessage(message, "https://www.avo.app/_debugger")
  } else {
    _avo_debugger_events_during_boot.push(event);
  }
}

function _avo_debugger_send_position(position: webDebuggerPosition) {
  if (typeof window === 'undefined') { return; }
  window.addEventListener("message", function(event) {
    if (event.origin !== "https://www.avo.app") {
      return;
    }
    if (event.data.type_ === "avo-debugger-ready" && position !== null) {
      var message = {type_: "avo-debugger-position", position: position};
      document.getElementById("avo-debugger").contentWindow.postMessage(message, "https://www.avo.app/_debugger")
    }
  })
}


let AdobeAnalytics: any;

export function initAvo(options: {env: AvoEnv; webDebugger?: boolean;
  webDebuggerOptions?: webDebuggerOptions; strict?: boolean; noop?: boolean;
  reportFailureAs?: 'error' | 'warn' | 'log'; inspector?: AvoInspector;
  avoLogger?: AvoLogger}, destinationOptions: any,
  AdobeAnalyticsDestination: CustomDestination) {
  if (__AVO_ENV__ !== null) {
    return;
  }
  __AVO_ENV__ = options.env;
  if (options.avoLogger !== undefined) {
    __AVO_LOGGER__ = options.avoLogger;
  }
  if (options.noop === true) {
    __AVO_NOOP__ = true;
  }
  if (__AVO_NOOP__ && __AVO_ENV__ == AvoEnv.Prod) {
    InternalAvoLogger.warn("[avo] ****************************************************");
    InternalAvoLogger.warn("[avo] WARNING Avo cannot be initialized in noop mode in production:");
    InternalAvoLogger.warn("[avo] - Overwriting configuration with noop=false.");
    InternalAvoLogger.warn("[avo] - Please reach out if you want to be able to run Avo in production mode with noop=true");
    InternalAvoLogger.warn("[avo] ****************************************************");
    __AVO_NOOP__ = false;
  }
  if (__AVO_NOOP__) {
    InternalAvoLogger.log("[avo] ****************************************************");
    InternalAvoLogger.log("[avo] Avo is now initialized in noop mode. This means:");
    InternalAvoLogger.log("[avo] - No events will be sent");
    InternalAvoLogger.log("[avo] - No network requests are made");
    InternalAvoLogger.log("[avo] ****************************************************");
  }
  if (options.strict !== undefined) {
    __STRICT__ = options.strict !== false;
  }
  if (options.reportFailureAs !== undefined) {
    __REPORT_FAILURE_AS__ = options.reportFailureAs;
  }
  __WEB_DEBUGGER__ = !__AVO_NOOP__ && ((typeof window !== 'undefined' && (window as any).location.search.indexOf("avo_debug=1") > -1) || (options.webDebugger !== false && __AVO_ENV__ !== AvoEnv.Prod));
  if (!__AVO_NOOP__ && options.inspector !== undefined) {
    __INSPECTOR__ = options.inspector;
  } else if (__AVO_ENV__ !== 'prod') {
    InternalAvoLogger.warn("[avo] Avo Inspector not provided in initAvo() call");
  }

  destinationOptions = destinationOptions || {};

  if (__WEB_DEBUGGER__ && !__AVO_NOOP__) {
    if (options.webDebuggerOptions?.position) {
      _avo_debugger_send_position(options.webDebuggerOptions.position)
    }

(function() {
  if (typeof (window as any) === 'undefined') { return; }
  let init = function() {
    let iframe: any = document.createElement("iframe");
    document.body.appendChild(iframe);
    iframe.id = "avo-debugger";
    iframe.src = "https://www.avo.app/_debugger";
    iframe.style = "display: none;";
  };

  if (document.body) {
    init();
  } else {
    document.addEventListener('DOMContentLoaded', init);
  }
})();

  }
  if (!__AVO_NOOP__) {
    if (__AVO_ENV__ === AvoEnv.Prod) {
    }
    if (__AVO_ENV__ === AvoEnv.Dev) {
    }

    AdobeAnalytics = AdobeAnalyticsDestination;
    if (__AVO_ENV__ === 'prod') {
      AdobeAnalytics && AdobeAnalytics.make && AdobeAnalytics.make(__AVO_ENV__, "Prod--Key");
    } else if (__AVO_ENV__ === 'dev') {
      AdobeAnalytics && AdobeAnalytics.make && AdobeAnalytics.make(__AVO_ENV__, "Dev--Key");
    } else {
      console[__REPORT_FAILURE_AS__ || 'error']("[avo] No staging key is set for Adobe Analytics. Head to destination settings in Avo to set a staging key.");
      AdobeAnalytics && AdobeAnalytics.make && AdobeAnalytics.make(__AVO_ENV__, null);
    }
    if (__AVO_ENV__ === AvoEnv.Dev) {
      // debug console in Avo
      _avo_invoke_meta(__AVO_ENV__, 'init', [], 'init');
    }
  }
}

export function setAvoLogger(avoLogger: AvoLogger | null) {
  __AVO_LOGGER__ = avoLogger;
}

/**
 * global_page_loaded: Use this anytime the page initially loads & for when the location.pathname changes
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/_heCUM6uqJ}
 */
export function globalPageLoaded() {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "_heCUM6uqJ", "a11db275105a2de02b7474266f2e2fbbe6049f490114c61f1257814f36a08d84", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("global_page_loaded", {}, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("_heCUM6uqJ", "global_page_loaded", messages, [], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("global_page_loaded", {}, "_heCUM6uqJ", "a11db275105a2de02b7474266f2e2fbbe6049f490114c61f1257814f36a08d84");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("global_page_loaded", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityToggleTableProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_toggle_table: Happens when issuance activity table is toggled

eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: undefined
  name: { "Latest Issuance or "Rating Activity" }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/pcuteeP6zM}
 */
export function svIssuanceActivityToggleTable(
  properties: SvIssuanceActivityToggleTableProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "pcuteeP6zM", "336068b84c7f56622d17c6a108ba6475ebda7bb9db5eec84b0340ecc53fe0267", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_toggle_table", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("pcuteeP6zM", "sv_issuance_activity_toggle_table", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_toggle_table", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "pcuteeP6zM", "336068b84c7f56622d17c6a108ba6475ebda7bb9db5eec84b0340ecc53fe0267");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_toggle_table", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityExpandTrancheProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_expand_tranche: Happens when a tranche is expanded within the issuance rating activity table

eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal_id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/CPZHIV_AQk}
 */
export function svIssuanceActivityExpandTranche(
  properties: SvIssuanceActivityExpandTrancheProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "CPZHIV_AQk", "8b90aa70e6111a63b146a65f2c22ca824206d30130c3b0b70f8e7e130f64956f", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_expand_tranche", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("CPZHIV_AQk", "sv_issuance_activity_expand_tranche", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_expand_tranche", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "CPZHIV_AQk", "8b90aa70e6111a63b146a65f2c22ca824206d30130c3b0b70f8e7e130f64956f");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_expand_tranche", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvPerformanceTableViewProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_performance_table_view: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Performance Highlight"
  depth: undefined
  id: undefined
  name: { "Chart" or "Table" }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-_pvY_BVCj}
 */
export function svPerformanceTableView(
  properties: SvPerformanceTableViewProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "-_pvY_BVCj", "add38747c8f49daad99f2ddeccde5aa500d8a7345da97b738438394df25ba83a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_performance_table_view", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("-_pvY_BVCj", "sv_performance_table_view", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_performance_table_view", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "-_pvY_BVCj", "add38747c8f49daad99f2ddeccde5aa500d8a7345da97b738438394df25ba83a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_performance_table_view", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvRelatedResearchCategoryProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_related_research_category: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Reports and Insights"
  depth: undefined
  id: undefined
  name: { category name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/bcSbYozX9R}
 */
export function svRelatedResearchCategory(
  properties: SvRelatedResearchCategoryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "bcSbYozX9R", "fe889e622a118185f7e91a4f571ba75141480ac0dc45b891a7db0bc5a382a0fd", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_related_research_category", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("bcSbYozX9R", "sv_related_research_category", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_related_research_category", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "bcSbYozX9R", "fe889e622a118185f7e91a4f571ba75141480ac0dc45b891a7db0bc5a382a0fd");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_related_research_category", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvMethodologiesCategoryProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_methodologies_category: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Methodologies & Frameworks"
  depth: undefined
  id: undefined
  name: { toggle category }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kqRJe8vAh_}
 */
export function svMethodologiesCategory(
  properties: SvMethodologiesCategoryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kqRJe8vAh_", "5fed24d534dbfdc8729f724f0d68340682e20cbc950c95ff74f3cdf56c075415", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_methodologies_category", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kqRJe8vAh_", "sv_methodologies_category", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_methodologies_category", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kqRJe8vAh_", "5fed24d534dbfdc8729f724f0d68340682e20cbc950c95ff74f3cdf56c075415");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_methodologies_category", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvPerformanceToggleTrendlinesProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_performance_toggle_trendlines: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Performance Highlight"
  depth: undefined
  id: undefined
  name: { trendline type }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kNg-8HZnbD}
 */
export function svPerformanceToggleTrendlines(
  properties: SvPerformanceToggleTrendlinesProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kNg-8HZnbD", "cc3eb05369cb869d65ec699f6a1f28b813a82023bbb580b204124f108bb0d3e0", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_performance_toggle_trendlines", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kNg-8HZnbD", "sv_performance_toggle_trendlines", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_performance_toggle_trendlines", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kNg-8HZnbD", "cc3eb05369cb869d65ec699f6a1f28b813a82023bbb580b204124f108bb0d3e0");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_performance_toggle_trendlines", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvRegionSelectedProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_region_selected: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: { region name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/x_tVgRqlVV}
 */
export function svRegionSelected(properties: SvRegionSelectedProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "x_tVgRqlVV", "c15d930525786273a2b05bf4e9a37be68b448ef11891107fb62fcb206154e4e1", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_region_selected", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("x_tVgRqlVV", "sv_region_selected", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_region_selected", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "x_tVgRqlVV", "c15d930525786273a2b05bf4e9a37be68b448ef11891107fb62fcb206154e4e1");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_region_selected", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvSelectSectorProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_select_sector: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Select Sector"
  depth: undefined
  id: undefined
  name: { sector name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Lq38urzUwU}
 */
export function svSelectSector(properties: SvSelectSectorProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Lq38urzUwU", "7685fb359beed5f5544896b3c0040ffdee04847597a422f2de0eb61744c0d44c", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_select_sector", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Lq38urzUwU", "sv_select_sector", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_select_sector", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Lq38urzUwU", "7685fb359beed5f5544896b3c0040ffdee04847597a422f2de0eb61744c0d44c");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_select_sector", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvRelatedModelsProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_related_models: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: { related model name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2rRb3iLOSr}
 */
export function svRelatedModels(properties: SvRelatedModelsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "2rRb3iLOSr", "2390eea2cd4b08fe4cea86b2837a544ef33a94e321b8c30912874ba60ff9215f", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_related_models", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("2rRb3iLOSr", "sv_related_models", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_related_models", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "2rRb3iLOSr", "2390eea2cd4b08fe4cea86b2837a544ef33a94e321b8c30912874ba60ff9215f");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_related_models", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvHighlightsOutlookProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_highlights_outlook: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { document id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1zCE56hLYo}
 */
export function svHighlightsOutlook(properties: SvHighlightsOutlookProperties
  ) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1zCE56hLYo", "8875b08602db68492c207090c401a5c5d2e2309cf81a0ac7672d911b5f23a752", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_highlights_outlook", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1zCE56hLYo", "sv_highlights_outlook", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_highlights_outlook", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1zCE56hLYo", "8875b08602db68492c207090c401a5c5d2e2309cf81a0ac7672d911b5f23a752");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_highlights_outlook", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvHighlightsUpdateProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_highlights_update: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Highlight Update"
  depth: undefined
  id: { document id }
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/7lrExrt3Ds}
 */
export function svHighlightsUpdate(properties: SvHighlightsUpdateProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "7lrExrt3Ds", "a09dbe6e11a32419cd1009ccf1e17d67a3e3ed0d0daaf2a9b5968956192a6d08", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_highlights_update", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("7lrExrt3Ds", "sv_highlights_update", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_highlights_update", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "7lrExrt3Ds", "a09dbe6e11a32419cd1009ccf1e17d67a3e3ed0d0daaf2a9b5968956192a6d08");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_highlights_update", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityKeyContactsProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_key_contacts: eventDetails:
  category: { tab name }
  type: "Bttn"
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/N7IyBPfJ7}
 */
export function svIssuanceActivityKeyContacts(
  properties: SvIssuanceActivityKeyContactsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "N7IyBPfJ7", "98254446c971df7b8335cc85382a63ea57d86c43d6a90a9be45189a699b3ea14", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_key_contacts", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("N7IyBPfJ7", "sv_issuance_activity_key_contacts", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_key_contacts", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "N7IyBPfJ7", "98254446c971df7b8335cc85382a63ea57d86c43d6a90a9be45189a699b3ea14");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_key_contacts", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityDealNameProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_deal_name: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/8NTLkR4VDd}
 */
export function svIssuanceActivityDealName(
  properties: SvIssuanceActivityDealNameProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "8NTLkR4VDd", "7b2c06941447539e47978620cb2e9564f95df26c37cc650c4c3f95887b4f5917", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_deal_name", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("8NTLkR4VDd", "sv_issuance_activity_deal_name", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_deal_name", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "8NTLkR4VDd", "7b2c06941447539e47978620cb2e9564f95df26c37cc650c4c3f95887b4f5917");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_deal_name", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityReportsProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_reports: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/h7ZnqlJP1x}
 */
export function svIssuanceActivityReports(
  properties: SvIssuanceActivityReportsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "h7ZnqlJP1x", "65fa2fcc82e59a46f607259eaa1beaf11e0d28fdfe356df2e664e81c8846ad8b", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_reports", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("h7ZnqlJP1x", "sv_issuance_activity_reports", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_reports", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "h7ZnqlJP1x", "65fa2fcc82e59a46f607259eaa1beaf11e0d28fdfe356df2e664e81c8846ad8b");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_reports", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityRatingAndAssessmentNewsProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_rating_and_assessment_news: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/30xIqXtr06}
 */
export function svIssuanceActivityRatingAndAssessmentNews(
  properties: SvIssuanceActivityRatingAndAssessmentNewsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "30xIqXtr06", "fa236f2e86b8956a35acbb75ad7be80b6ca2b38437d0d7e502e23d2a0d0b8d96", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_rating_and_assessment_news", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("30xIqXtr06", "sv_issuance_activity_rating_and_assessment_news", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_rating_and_assessment_news", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "30xIqXtr06", "fa236f2e86b8956a35acbb75ad7be80b6ca2b38437d0d7e502e23d2a0d0b8d96");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_rating_and_assessment_news", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityRelatedDealsProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_related_deals: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }"
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/vTrgdPZuT}
 */
export function svIssuanceActivityRelatedDeals(
  properties: SvIssuanceActivityRelatedDealsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "vTrgdPZuT", "5004b4a2c612d205fc7ff84e9c4e36a2d9969a0c5822c98439296d1371f2e6bb", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_related_deals", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("vTrgdPZuT", "sv_issuance_activity_related_deals", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_related_deals", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "vTrgdPZuT", "5004b4a2c612d205fc7ff84e9c4e36a2d9969a0c5822c98439296d1371f2e6bb");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_related_deals", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvRelatedResearchReadReportProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_related_research_read_report: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Reports and Insights"
  depth: undefined
  id: { document id }
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/S3-5NTjrHJ}
 */
export function svRelatedResearchReadReport(
  properties: SvRelatedResearchReadReportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "S3-5NTjrHJ", "5ee5fe9f76eecc1cb58478daa784571ee7fa5fb1ed2d7818023a34d4d1f5b4a8", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_related_research_read_report", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("S3-5NTjrHJ", "sv_related_research_read_report", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_related_research_read_report", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "S3-5NTjrHJ", "5ee5fe9f76eecc1cb58478daa784571ee7fa5fb1ed2d7818023a34d4d1f5b4a8");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_related_research_read_report", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvRelatedResearchViewMoreProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_related_research_view_more: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Reports and Insights"
  depth: undefined
  id: undefined
  name: "View More"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Pzw0ksw6ZK}
 */
export function svRelatedResearchViewMore(
  properties: SvRelatedResearchViewMoreProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Pzw0ksw6ZK", "45a8c4893e83a972c2a3c39c54314b4734d98ceaa59feddba7b9fcf41e0817c3", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_related_research_view_more", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Pzw0ksw6ZK", "sv_related_research_view_more", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_related_research_view_more", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Pzw0ksw6ZK", "45a8c4893e83a972c2a3c39c54314b4734d98ceaa59feddba7b9fcf41e0817c3");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_related_research_view_more", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvEventRegisterNowProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_event_register_now: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Upcoming Events"
  depth: undefined
  id: { event name }
  name: "Register Now"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/e50cIcIRrU}
 */
export function svEventRegisterNow(properties: SvEventRegisterNowProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "e50cIcIRrU", "d50c77cbec1d89026a481fc99b7fbcacba6ac73ad0ba1b5aa34e11bfca80edda", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_event_register_now", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("e50cIcIRrU", "sv_event_register_now", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_event_register_now", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "e50cIcIRrU", "d50c77cbec1d89026a481fc99b7fbcacba6ac73ad0ba1b5aa34e11bfca80edda");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_event_register_now", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvEventViewMoreProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_event_view_more: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Upcoming Events"
  depth: undefined
  id: undefined
  name: "View More"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2bG7Tb2I_Q}
 */
export function svEventViewMore(properties: SvEventViewMoreProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "2bG7Tb2I_Q", "34920c80eb859219a1f96757cb9e2f50ab5b34591ebd6284e49c84894b0872ed", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_event_view_more", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("2bG7Tb2I_Q", "sv_event_view_more", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_event_view_more", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "2bG7Tb2I_Q", "34920c80eb859219a1f96757cb9e2f50ab5b34591ebd6284e49c84894b0872ed");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_event_view_more", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvMethodologiesReportProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_methodologies_report: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Methodologies & Frameworks"
  depth: undefined
  id: { document id }
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/IN-Rf8aGlk}
 */
export function svMethodologiesReport(
  properties: SvMethodologiesReportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "IN-Rf8aGlk", "45eec8a3be96f70ad558ed2b7d7ca325a1ea077e556b8c7ce15bd18169937677", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_methodologies_report", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("IN-Rf8aGlk", "sv_methodologies_report", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_methodologies_report", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "IN-Rf8aGlk", "45eec8a3be96f70ad558ed2b7d7ca325a1ea077e556b8c7ce15bd18169937677");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_methodologies_report", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityViewMoreProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_view_more: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: undefined
  name: "View More"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/jfSroyeYFE}
 */
export function svIssuanceActivityViewMore(
  properties: SvIssuanceActivityViewMoreProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "jfSroyeYFE", "ef0c185b82c8698a2a57e098f0b6ae9ae6170a0c4aeb5c0dfe17b4a12ed7f531", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_view_more", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("jfSroyeYFE", "sv_issuance_activity_view_more", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_view_more", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "jfSroyeYFE", "ef0c185b82c8698a2a57e098f0b6ae9ae6170a0c4aeb5c0dfe17b4a12ed7f531");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_view_more", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityViewReportsProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_view_reports: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: { deal id }
  name: { deal name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/lZveVdp7Eq}
 */
export function svIssuanceActivityViewReports(
  properties: SvIssuanceActivityViewReportsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "lZveVdp7Eq", "42f40ddd9c79d02dcb6b82568e1694bea4eb26c984148fd8f04b5ddd0f8a1ec7", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_view_reports", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("lZveVdp7Eq", "sv_issuance_activity_view_reports", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_view_reports", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "lZveVdp7Eq", "42f40ddd9c79d02dcb6b82568e1694bea4eb26c984148fd8f04b5ddd0f8a1ec7");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_view_reports", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvDealPageWidgetLinkProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_deal_page_widget_link: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: undefined
  name: { deal_name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/t4C2hS28Zu}
 */
export function svDealPageWidgetLink(
  properties: SvDealPageWidgetLinkProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "t4C2hS28Zu", "0f82fb87aeb1a654e5c25f5462c535ad808de3bb77d04e35e2b2ae67ccd83e58", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_deal_page_widget_link", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("t4C2hS28Zu", "sv_deal_page_widget_link", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_deal_page_widget_link", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "t4C2hS28Zu", "0f82fb87aeb1a654e5c25f5462c535ad808de3bb77d04e35e2b2ae67ccd83e58");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_deal_page_widget_link", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvHighlightsOutlookViewAllProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_highlights_outlook_view_all: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Highlight Outlook"
  depth: undefined
  id: undefined
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/lPM2I-_GSs}
 */
export function svHighlightsOutlookViewAll(
  properties: SvHighlightsOutlookViewAllProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "lPM2I-_GSs", "c916fce734e08e25385ccff5dab0f2afecffd2b0c6ff688d6edc52264cf1abb3", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_highlights_outlook_view_all", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("lPM2I-_GSs", "sv_highlights_outlook_view_all", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_highlights_outlook_view_all", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "lPM2I-_GSs", "c916fce734e08e25385ccff5dab0f2afecffd2b0c6ff688d6edc52264cf1abb3");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_highlights_outlook_view_all", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvHighlightsUpdateViewAllProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_highlights_update_view_all: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Highlight Update"
  depth: undefined
  id: undefined
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/pi40Xp82Hv}
 */
export function svHighlightsUpdateViewAll(
  properties: SvHighlightsUpdateViewAllProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "pi40Xp82Hv", "cc4ba7be35200d7e2e7b652e35c13e1f094eb182b7acd844f20a80128481eae8", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_highlights_update_view_all", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("pi40Xp82Hv", "sv_highlights_update_view_all", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_highlights_update_view_all", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "pi40Xp82Hv", "cc4ba7be35200d7e2e7b652e35c13e1f094eb182b7acd844f20a80128481eae8");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_highlights_update_view_all", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvIssuanceActivityExportProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_issuance_activity_export: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Latest Issuance" or "Rating Activity" }
  depth: undefined
  id: undefined
  name: "Export"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Z0NOE3x7X}
 */
export function svIssuanceActivityExport(
  properties: SvIssuanceActivityExportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Z0NOE3x7X", "c03787d835d3334c07f27fb9b15386fcb7894ab5d2e1a3c9d0e9b903eadfb11b", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_issuance_activity_export", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Z0NOE3x7X", "sv_issuance_activity_export", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_issuance_activity_export", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Z0NOE3x7X", "c03787d835d3334c07f27fb9b15386fcb7894ab5d2e1a3c9d0e9b903eadfb11b");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_issuance_activity_export", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvPerformanceHighlightsDownloadProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_performance_highlights_download: eventDetails:
  category: "Sector View"
  type: { "Chart" or "Table" }
  siteSection: undefined
  moduleName: "Performance Highlight"
  depth: undefined
  id: undefined
  name: "Export"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/M8ouPS7wl}
 */
export function svPerformanceHighlightsDownload(
  properties: SvPerformanceHighlightsDownloadProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "M8ouPS7wl", "fb23f65e40b82ad8e472c5bed3632009705e20e4cee5d56275a6a472bf0ca2aa", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_performance_highlights_download", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("M8ouPS7wl", "sv_performance_highlights_download", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_performance_highlights_download", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "M8ouPS7wl", "fb23f65e40b82ad8e472c5bed3632009705e20e4cee5d56275a6a472bf0ca2aa");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_performance_highlights_download", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvHighlightsPodcastProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_highlights_podcast: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: "Highlight Podcast"
  depth: undefined
  id: undefined
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1VA6TNRr7}
 */
export function svHighlightsPodcast(properties: SvHighlightsPodcastProperties
  ) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1VA6TNRr7", "0a4b0d628716ce99f1a0d7856821d8ace1bb394b86601f9945b607ac91ab7281", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_highlights_podcast", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1VA6TNRr7", "sv_highlights_podcast", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_highlights_podcast", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1VA6TNRr7", "0a4b0d628716ce99f1a0d7856821d8ace1bb394b86601f9945b607ac91ab7281");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_highlights_podcast", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SvHighlightsDrawerProperties {
  dataAnalyticsLink: string;
}
/**
 * sv_highlights_drawer: eventDetails:
  category: "Sector View"
  type: undefined
  siteSection: undefined
  moduleName: { "Highlight Outlook" or "Highlight Update" }
  depth: undefined
  id: { document id }
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/MeThG6rsh}
 */
export function svHighlightsDrawer(properties: SvHighlightsDrawerProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "MeThG6rsh", "6196bb66b0d8e10bfd550261df1e4ea3e422b7537989eb6446d6b460c05c22c0", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("sv_highlights_drawer", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("MeThG6rsh", "sv_highlights_drawer", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("sv_highlights_drawer", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "MeThG6rsh", "6196bb66b0d8e10bfd550261df1e4ea3e422b7537989eb6446d6b460c05c22c0");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("sv_highlights_drawer", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface PlaceholderEventProperties {
  dataAnalyticsLink: string;
}
/**
 * placeholder_event: eventDetails:
  category: undefined
  type: undefined
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: undefined

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/k14hwAi6g}
 */
export function placeholderEvent(properties: PlaceholderEventProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "k14hwAi6g", "62aa596954cc99c32c34a46cf9504c93bbdeab373cb6c6e595f914daec1ceef1", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("placeholder_event", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("k14hwAi6g", "placeholder_event", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("placeholder_event", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "k14hwAi6g", "62aa596954cc99c32c34a46cf9504c93bbdeab373cb6c6e595f914daec1ceef1");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("placeholder_event", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwMarketingMediaContentProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_marketing_media_content: eventDetails:
  category: "Gateway Drawer"
  type: undefined
  siteSection: undefined
  moduleName: "Recommended for you"
  depth: undefined
  id: {document title}
  name: "Listen"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. When user clicks on Media content
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/HVl_QcgKG/trigger/05rZCFcT-
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/HVl_QcgKG}
 */
export function gwMarketingMediaContent(
  properties: GwMarketingMediaContentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "HVl_QcgKG", "e15497f54383ad7dc5bc5c7008b4fcc4236c79a691b63ac47c9c06b2d2f76cc5", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_marketing_media_content", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("HVl_QcgKG", "gw_marketing_media_content", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_marketing_media_content", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "HVl_QcgKG", "e15497f54383ad7dc5bc5c7008b4fcc4236c79a691b63ac47c9c06b2d2f76cc5");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_marketing_media_content", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwNavigationCvProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_navigation_cv: eventDetails:
  category: "Gateway Drawer"
  type: undefined
  siteSection: undefined
  moduleName: "My Products"
  depth: undefined
  id: undefined
  name: "CreditView"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. CTA
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/YliDI7t1H/trigger/H8xedjGFD
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/YliDI7t1H}
 */
export function gwNavigationCv(properties: GwNavigationCvProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "YliDI7t1H", "f4d6785ee007a126acec99ad89874cd089d5944e6e1a65f1c8848290ff1f9b27", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_navigation_cv", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("YliDI7t1H", "gw_navigation_cv", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_navigation_cv", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "YliDI7t1H", "f4d6785ee007a126acec99ad89874cd089d5944e6e1a65f1c8848290ff1f9b27");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_navigation_cv", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwNavigationEdfxProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_navigation_edfx: eventDetails:
  category: Gateway Drawer
  type: undefined
  siteSection: undefined
  moduleName: My Products
  depth: undefined
  id: undefined
  name: EDFX

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. CTA
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/X51CLFeq2/trigger/o7UgzfqTr
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/X51CLFeq2}
 */
export function gwNavigationEdfx(properties: GwNavigationEdfxProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "X51CLFeq2", "6aee5a21354bab8b11ad0af65b975b51660b76785e6ae4e37fd161b14d510351", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_navigation_edfx", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("X51CLFeq2", "gw_navigation_edfx", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_navigation_edfx", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "X51CLFeq2", "6aee5a21354bab8b11ad0af65b975b51660b76785e6ae4e37fd161b14d510351");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_navigation_edfx", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwMarketingProductContentProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_marketing_product_content: eventDetails:
  category: "Gateway Drawer"
  type: undefined
  siteSection: undefined
  moduleName: "Recommended for you"
  depth: undefined
  id: {document title}
  name: "Read more"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }le
 *
 * When to trigger this event:
 * 1. CTA
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-mjorYxJ_/trigger/HwrNwIXl0
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-mjorYxJ_}
 */
export function gwMarketingProductContent(
  properties: GwMarketingProductContentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "-mjorYxJ_", "eaf16a74e3537db20b850fff9cd5b07877802862085232297522965f34c4d986", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_marketing_product_content", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("-mjorYxJ_", "gw_marketing_product_content", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_marketing_product_content", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "-mjorYxJ_", "eaf16a74e3537db20b850fff9cd5b07877802862085232297522965f34c4d986");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_marketing_product_content", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwOpenWaffleProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_open_waffle: eventDetails:
  category: "Gateway Drawer"
  type: undefined
  siteSection: undefined
  moduleName: "Waffle"
  depth: undefined
  id: undefined
  name: "DrawerOpen"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to open drawer
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/aj8RLhYo-/trigger/tcj2dckc8
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/aj8RLhYo-}
 */
export function gwOpenWaffle(properties: GwOpenWaffleProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "aj8RLhYo-", "72811ea9f914472ac40c190c5435a249a62d3614d321c57bb4a2e3567e2aa8a3", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_open_waffle", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("aj8RLhYo-", "gw_open_waffle", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_open_waffle", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "aj8RLhYo-", "72811ea9f914472ac40c190c5435a249a62d3614d321c57bb4a2e3567e2aa8a3");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_open_waffle", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerFilterOpenedProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_filter_opened: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: {"top toolbar" or "sidebar" or "column header"}
  id: undefined
  name: undefined
 *
 * When to trigger this event:
 * 1. User clicks on filter to apply range
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/U1IebfVoc/trigger/alnSxfroA
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/U1IebfVoc}
 */
export function screenerFilterOpened(
  properties: ScreenerFilterOpenedProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "U1IebfVoc", "8d7601e36b8014e9a4605f2c751f3d412d0fd33334a583a5d4582fba2c72cf9d", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_filter_opened", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("U1IebfVoc", "screener_filter_opened", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_filter_opened", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "U1IebfVoc", "8d7601e36b8014e9a4605f2c751f3d412d0fd33334a583a5d4582fba2c72cf9d");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_filter_opened", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerIIconProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_i_icon: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {column_group_name}
 *
 * When to trigger this event:
 * 1. Clicked on "i" icon on column group name to open methodology drawer
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kWimzTnbY/trigger/9qhGxJSbN
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kWimzTnbY}
 */
export function screenerIIcon(properties: ScreenerIIconProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kWimzTnbY", "71af191d9f240a811c29368bbc107913fc535ff765362a023ce5e9b1deb88869", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_i_icon", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kWimzTnbY", "screener_i_icon", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_i_icon", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kWimzTnbY", "71af191d9f240a811c29368bbc107913fc535ff765362a023ce5e9b1deb88869");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_i_icon", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerGroupedColumnsProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_grouped_columns: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: {"opened" or "closed"}
  name: {column_group_name}
 *
 * When to trigger this event:
 * 1. Click on arrow next to column group name to open / close it
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2NbowGgpC/trigger/8A3ao-6ZU
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2NbowGgpC}
 */
export function screenerGroupedColumns(
  properties: ScreenerGroupedColumnsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "2NbowGgpC", "c8b9dfcc69e3b68a77be1523ec30ab7ef0a4b2392ba7b8fe05079da468921e89", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_grouped_columns", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("2NbowGgpC", "screener_grouped_columns", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_grouped_columns", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "2NbowGgpC", "c8b9dfcc69e3b68a77be1523ec30ab7ef0a4b2392ba7b8fe05079da468921e89");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_grouped_columns", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerScoreCommentOpenedProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_score_comment_opened: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {column_name} (on which comment was opened)
 *
 * When to trigger this event:
 * 1. User clicks on a cell with comment to open the side drawer
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ObpL_I3w1/trigger/RtMA4bkxG
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ObpL_I3w1}
 */
export function screenerScoreCommentOpened(
  properties: ScreenerScoreCommentOpenedProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "ObpL_I3w1", "ff4d858cb55a8c48d9572fe12881be67950e9b3b2657049255b4eff4ebfcbdec", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_score_comment_opened", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("ObpL_I3w1", "screener_score_comment_opened", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_score_comment_opened", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "ObpL_I3w1", "ff4d858cb55a8c48d9572fe12881be67950e9b3b2657049255b4eff4ebfcbdec");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_score_comment_opened", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerEditColumnsProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_edit_columns: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: {"added" or "removed"}
  name: {column_name}
 *
 * When to trigger this event:
 * 1. click on edit columns to select additional columns or remove some by clicking the checkbox 
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/FyZwusBg7/trigger/mKTP0vRbk
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/FyZwusBg7}
 */
export function screenerEditColumns(properties: ScreenerEditColumnsProperties
  ) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "FyZwusBg7", "b11c755cdcb88daf5cc3d1e7e2c2e1fb7de89d456d1b0f6fa91419d1dc439599", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_edit_columns", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("FyZwusBg7", "screener_edit_columns", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_edit_columns", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "FyZwusBg7", "b11c755cdcb88daf5cc3d1e7e2c2e1fb7de89d456d1b0f6fa91419d1dc439599");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_edit_columns", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerRowsPerPageProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_rows_per_page: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {"100" or "200" or "500" or "1000"}
 *
 * When to trigger this event:
 * 1. User clicks on Rows per page and selects one of the options to show more rows
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/32rAdcfue/trigger/bPX_CpWgD
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/32rAdcfue}
 */
export function screenerRowsPerPage(properties: ScreenerRowsPerPageProperties
  ) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "32rAdcfue", "3fe85252c88778cf8666b97cca5c412d0157d9d28981232a7d212fcc82bbf13a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_rows_per_page", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("32rAdcfue", "screener_rows_per_page", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_rows_per_page", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "32rAdcfue", "3fe85252c88778cf8666b97cca5c412d0157d9d28981232a7d212fcc82bbf13a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_rows_per_page", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerPageProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_page: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {page_number} (page # that user opened)
 *
 * When to trigger this event:
 * 1. User click on next / previous page to review more results
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/gkPPFQYy-/trigger/Dk02JAa-C
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/gkPPFQYy-}
 */
export function screenerPage(properties: ScreenerPageProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "gkPPFQYy-", "c74861859c214857b182985777f320b3fbb425c266fd33880867658c4e18b19a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_page", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("gkPPFQYy-", "screener_page", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_page", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "gkPPFQYy-", "c74861859c214857b182985777f320b3fbb425c266fd33880867658c4e18b19a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_page", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerSortProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_sort: eventDetails:
  category: "Screener"
  type: { Txt }
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id:  { "asc" or "desc" } (or could be {"default" or "opposite"}
  name: {column_name} (on which sort was appllied)
 *
 * When to trigger this event:
 * 1. Click on column name to sort, click again to change sorting order
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/x34zcMIZY/trigger/1W4s3AH3m
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/x34zcMIZY}
 */
export function screenerSort(properties: ScreenerSortProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "x34zcMIZY", "bdc78743252ddc47873a6ea19b8cfd204667131ed810ba18af229353b40c9276", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_sort", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("x34zcMIZY", "screener_sort", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_sort", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "x34zcMIZY", "bdc78743252ddc47873a6ea19b8cfd204667131ed810ba18af229353b40c9276");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_sort", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerExportProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_export: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: {time_it_took_to_export} (in seconds)
  id: {"success" or "fail"}
  name: {number_of_rows}


alternative
  depth: {time_when_it_happened}
  id: {"started" or "success" or "fail"}
 *
 * When to trigger this event:
 * 1. User clicks on Export button
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/HKGBdhCTe/trigger/23Cny5V1q
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/HKGBdhCTe}
 */
export function screenerExport(properties: ScreenerExportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "HKGBdhCTe", "59b983eaf57f9b973dc6a9fff403397764a085ef3126038b62af1cc0130baf4e", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_export", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("HKGBdhCTe", "screener_export", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_export", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "HKGBdhCTe", "59b983eaf57f9b973dc6a9fff403397764a085ef3126038b62af1cc0130baf4e");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_export", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerFilterSearchProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_filter_search: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: {"top toolbar" or "sidebar" or "column header"}
  id: {search_term}
  name: {column_name} (on which filter was searched)
 *
 * When to trigger this event:
 * 1. User enters a term in a filter's search field to find criteria to select
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/fF1m0JG-T/trigger/EvtV7ugw-3
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/fF1m0JG-T}
 */
export function screenerFilterSearch(
  properties: ScreenerFilterSearchProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "fF1m0JG-T", "263734151cd74e5d69ead2d2360874cbdfe350c460e3938c55c03df3ffc16574", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_filter_search", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("fF1m0JG-T", "screener_filter_search", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_filter_search", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "fF1m0JG-T", "263734151cd74e5d69ead2d2360874cbdfe350c460e3938c55c03df3ffc16574");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_filter_search", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerFilterSelectedProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_filter_selected: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: {"top toolbar" or "sidebar" or "column header"}
  id: undefined
  name: {column_name} (on which filter was appllied)
 *
 * When to trigger this event:
 * 1. User clicks on filter to apply range
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1cd5z3QQT/trigger/ulJ0vioT6l
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1cd5z3QQT}
 */
export function screenerFilterSelected(
  properties: ScreenerFilterSelectedProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1cd5z3QQT", "87a2da20195ce0139634e31e0d9efebfcac84519633028b329f83a00ecf896d1", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_filter_selected", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1cd5z3QQT", "screener_filter_selected", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_filter_selected", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1cd5z3QQT", "87a2da20195ce0139634e31e0d9efebfcac84519633028b329f83a00ecf896d1");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_filter_selected", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdTopfilterProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_topfilter: eventDetails:
  category: "Reports Directory"
  type: txt
  siteSection: undefined
  moduleName: { "Top Filter" }
  depth: undefined
  id: { "Report Type" or "Sector" or "Region" }
  name: { value }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xPjISK-wc}
 */
export function rdTopfilter(properties: RdTopfilterProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "xPjISK-wc", "3930427f74bdda09e6778eb3c4d77f845028f9c144938348adf829d2bd6a422c", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_topfilter", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("xPjISK-wc", "rd_topfilter", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_topfilter", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "xPjISK-wc", "3930427f74bdda09e6778eb3c4d77f845028f9c144938348adf829d2bd6a422c");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_topfilter", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdColumnfilterProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_columnfilter: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: { "Report Type" }
  depth: undefined
  id: { report type }
  name:  { value  }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Dzz6oKWdR}
 */
export function rdColumnfilter(properties: RdColumnfilterProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Dzz6oKWdR", "b94453e3b66e96cbc8a714d5929e339a4beb7cf97830cf1b02ab425448116b48", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_columnfilter", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Dzz6oKWdR", "rd_columnfilter", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_columnfilter", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Dzz6oKWdR", "b94453e3b66e96cbc8a714d5929e339a4beb7cf97830cf1b02ab425448116b48");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_columnfilter", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdResetfilterbuttonProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_resetfilterbutton: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: { "Top Filter" }
  depth: undefined
  id: { "Reset" }
  name: { reset }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Te1o11wWD}
 */
export function rdResetfilterbutton(properties: RdResetfilterbuttonProperties
  ) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Te1o11wWD", "6156d8b29fae89308e3bc483aa822b3f0e38fcf11b28947a074898d98f371607", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_resetfilterbutton", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Te1o11wWD", "rd_resetfilterbutton", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_resetfilterbutton", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Te1o11wWD", "6156d8b29fae89308e3bc483aa822b3f0e38fcf11b28947a074898d98f371607");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_resetfilterbutton", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdDaterangeProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_daterange: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: { "Date Range" }
  depth: undefined
  id: undefined
  name: { “Date Range” or “Lookback Period” }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Zjq8rvi4j}
 */
export function rdDaterange(properties: RdDaterangeProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Zjq8rvi4j", "0c8ffe598e10056527f6ecbb909713e266dd7ba8a62fdd6456728da73d97e437", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_daterange", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Zjq8rvi4j", "rd_daterange", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_daterange", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Zjq8rvi4j", "0c8ffe598e10056527f6ecbb909713e266dd7ba8a62fdd6456728da73d97e437");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_daterange", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdTranslationsProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_translations: eventDetails:
  category: "Reports Directory"
  type: "Img"
  siteSection: undefined
  moduleName: "Translation"
  depth: undefined
  id: { document id }
  name: { link name  }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-HNJDnKUQ}
 */
export function rdTranslations(properties: RdTranslationsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "-HNJDnKUQ", "54d1b773f6e5ab079dd8b04b9491c5aa48797f7b050510157ab16db7511247c3", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_translations", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("-HNJDnKUQ", "rd_translations", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_translations", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "-HNJDnKUQ", "54d1b773f6e5ab079dd8b04b9491c5aa48797f7b050510157ab16db7511247c3");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_translations", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdReportclickProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_reportclick: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: "Title"
  depth: undefined
  id: { document id }
  name: { link name  }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1wV-8g1ZS}
 */
export function rdReportclick(properties: RdReportclickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1wV-8g1ZS", "1b0aac60ec46d8e147ffd4bfe31a06a4bf1eeb9889c3c33bc9863d48714d8684", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_reportclick", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1wV-8g1ZS", "rd_reportclick", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_reportclick", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1wV-8g1ZS", "1b0aac60ec46d8e147ffd4bfe31a06a4bf1eeb9889c3c33bc9863d48714d8684");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_reportclick", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdPaginationProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_pagination: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {page_number} (page # that user opened)

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ecXQoiAKT}
 */
export function rdPagination(properties: RdPaginationProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "ecXQoiAKT", "d8cf8f3fbb1fcfc6f6c48e03ba47978039d8653ba2397eaed0b4e183d7d5b708", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_pagination", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("ecXQoiAKT", "rd_pagination", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_pagination", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "ecXQoiAKT", "d8cf8f3fbb1fcfc6f6c48e03ba47978039d8653ba2397eaed0b4e183d7d5b708");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_pagination", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdRowsperpageProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_rowsperpage: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {"25" or "50" or "100"}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/v3umzpjsh}
 */
export function rdRowsperpage(properties: RdRowsperpageProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "v3umzpjsh", "7ff69c30842e4d68eb3496e79eb1dd27b00ed73a3ca1e6a6d4128be76a7772a5", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_rowsperpage", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("v3umzpjsh", "rd_rowsperpage", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_rowsperpage", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "v3umzpjsh", "7ff69c30842e4d68eb3496e79eb1dd27b00ed73a3ca1e6a6d4128be76a7772a5");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_rowsperpage", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdSearchkeywordProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_searchkeyword: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: {search_term}
  name: undefined

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/69wnfCGbT}
 */
export function rdSearchkeyword(properties: RdSearchkeywordProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "69wnfCGbT", "fc8302f2f4359fa92750632132dd72b4852d2973dadbe4617fe81684db3024a2", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_searchkeyword", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("69wnfCGbT", "rd_searchkeyword", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_searchkeyword", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "69wnfCGbT", "fc8302f2f4359fa92750632132dd72b4852d2973dadbe4617fe81684db3024a2");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_searchkeyword", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdAuthorizedssProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_authorizedss: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: { "Research Select Authorization" }
  depth: undefined
  id: { “Pre-Authorized” or “Authorized” }
  name: { link name }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/BUp_zmkWy}
 */
export function rdAuthorizedss(properties: RdAuthorizedssProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "BUp_zmkWy", "b718388517f806f2d4cc9962babb08a1021147539c43eb3a4e153ef20178b841", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_authorizedss", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("BUp_zmkWy", "rd_authorizedss", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_authorizedss", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "BUp_zmkWy", "b718388517f806f2d4cc9962babb08a1021147539c43eb3a4e153ef20178b841");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_authorizedss", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RdPageresetbuttonProperties {
  dataAnalyticsLink: string;
}
/**
 * rd_pageresetbutton: eventDetails:
  category: "Reports Directory"
  type: "Txt"
  siteSection: undefined
  moduleName: { "Top Filter" }
  depth: undefined
  id: { "Reset" }
  name: { reset }

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/5XCAUW4ps}
 */
export function rdPageresetbutton(properties: RdPageresetbuttonProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "5XCAUW4ps", "cb7ada1cc6c1203b345580dcd7a7b0002ffccbb78a94ae5f5e2eaca6d54075fa", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("rd_pageresetbutton", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("5XCAUW4ps", "rd_pageresetbutton", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("rd_pageresetbutton", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "5XCAUW4ps", "cb7ada1cc6c1203b345580dcd7a7b0002ffccbb78a94ae5f5e2eaca6d54075fa");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("rd_pageresetbutton", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerChartviewProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_chartview: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: {"opened" or "closed"}
  id: undefined
  name: undefined


 *
 * When to trigger this event:
 * 1. When user clicks on "Chart View" toggle
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/C6QU3a-KA/trigger/GGhEhL0rM
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/C6QU3a-KA}
 */
export function screenerChartview(properties: ScreenerChartviewProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "C6QU3a-KA", "3589e9f576f1ad66337d89442f2317584188cef6415c95f369cd546fe14337ed", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_chartview", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("C6QU3a-KA", "screener_chartview", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_chartview", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "C6QU3a-KA", "3589e9f576f1ad66337d89442f2317584188cef6415c95f369cd546fe14337ed");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_chartview", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerChartviewTabsProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_chartview_tabs: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: { "Credit Rating Charts" or "ESG Charts" }
  id: undefined
  name: undefined


 *
 * When to trigger this event:
 * 1. When user clicks on "Credit Rating Charts" or "ESG Charts"  to change tabs
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Drq-l0nq7/trigger/YdpqMXnGbt
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Drq-l0nq7}
 */
export function screenerChartviewTabs(
  properties: ScreenerChartviewTabsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Drq-l0nq7", "81377fafae7e09329e41f4b2c506ce03dfb4049fcdccab870e7809344e5c4f03", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_chartview_tabs", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Drq-l0nq7", "screener_chartview_tabs", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_chartview_tabs", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Drq-l0nq7", "81377fafae7e09329e41f4b2c506ce03dfb4049fcdccab870e7809344e5c4f03");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_chartview_tabs", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabSectionExpandAllProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_section_expand_all: eventDetails:
  category: "financials"
  type: Txt
  siteSection: "Non Rated Issuers"
  moduleName: {"Key Indicators" or "Income Statement" or "Balance Sheet" or "Cash Flow Statement" or "Supplemental Data" or "All Ratios"}
  depth: undefined
  id: undefined
  name: "Expand All"

Note:
Capture the number of times expand all feature is used by users
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/q5oU7QKqF/trigger/nKWKUqnoE
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/q5oU7QKqF}
 */
export function financialsTabSectionExpandAll(
  properties: FinancialsTabSectionExpandAllProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "q5oU7QKqF", "dbb36e73e542300e58c1473f316123967bc41b5a9dede3273218689882e0d343", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_section_expand_all", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("q5oU7QKqF", "financials_tab_section_expand_all", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_section_expand_all", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "q5oU7QKqF", "dbb36e73e542300e58c1473f316123967bc41b5a9dede3273218689882e0d343");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_section_expand_all", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabSectionCollapseAllProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_section_collapse_all: eventDetails:
  category: "financials"
  type: Txt
  siteSection: "Non Rated Issuers"
  moduleName: {"Key Indicators" or "Income Statement" or "Balance Sheet" or "Cash Flow Statement" or "Supplemental Data" or "All Ratios"}
  depth: undefined
  id: undefined
  name: "Collapse All"

Note:
Capture the number of times collapse all feature is used by users for all financial sections
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/fYcEXw7QQ/trigger/mXo0En0qi
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/fYcEXw7QQ}
 */
export function financialsTabSectionCollapseAll(
  properties: FinancialsTabSectionCollapseAllProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "fYcEXw7QQ", "f0e91c7e930861f739a6eed529bd6da3ef39aa6e8525d5a59bf46fc4c95adf7c", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_section_collapse_all", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("fYcEXw7QQ", "financials_tab_section_collapse_all", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_section_collapse_all", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "fYcEXw7QQ", "f0e91c7e930861f739a6eed529bd6da3ef39aa6e8525d5a59bf46fc4c95adf7c");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_section_collapse_all", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabTopBarNavigationProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_top_bar_navigation: eventDetails:
  category: "financials"
  type: Txt
  siteSection: "Non Rated Issuers"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {Tab Name} - financial tabs that user clicks on tab bar

Note:
Capture the number of times user clicks on different tabs on financial sections on the tab bar
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1z89Ck7Ke/trigger/yN3Vz9XGC
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1z89Ck7Ke}
 */
export function financialsTabTopBarNavigation(
  properties: FinancialsTabTopBarNavigationProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1z89Ck7Ke", "727528c66b470d159a1357de3d9013fefb8daa76888d7d17fa9f1dc700d770b5", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_top_bar_navigation", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1z89Ck7Ke", "financials_tab_top_bar_navigation", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_top_bar_navigation", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1z89Ck7Ke", "727528c66b470d159a1357de3d9013fefb8daa76888d7d17fa9f1dc700d770b5");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_top_bar_navigation", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabSectionUngroupStatementsProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_section_ungroup_statements: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {group/ungroup fields} - allows users to drill down on subfields

Note:
Capture the number of times users are drilling down each field
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/5BfJOAGkB/trigger/cJQ5ZoDzt
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/5BfJOAGkB}
 */
export function financialsTabSectionUngroupStatements(
  properties: FinancialsTabSectionUngroupStatementsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "5BfJOAGkB", "23b53a3505beeb6ef416dd0ce056638b8ac7ad63e80600afd5afab2d9e399a9a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_section_ungroup_statements", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("5BfJOAGkB", "financials_tab_section_ungroup_statements", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_section_ungroup_statements", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "5BfJOAGkB", "23b53a3505beeb6ef416dd0ce056638b8ac7ad63e80600afd5afab2d9e399a9a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_section_ungroup_statements", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabSourceDocumentViewProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_source_document_view: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {day month year} - hyperlink that displays the financial report date

Note:
Capture the number of times users view the source document
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/4_dyTqEc9/trigger/JRnXA6LnK
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/4_dyTqEc9}
 */
export function financialsTabSourceDocumentView(
  properties: FinancialsTabSourceDocumentViewProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "4_dyTqEc9", "6a698a857b984ccde5a4756f46f8b84808e83085ba92d6835ef8099fb3aea31f", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_source_document_view", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("4_dyTqEc9", "financials_tab_source_document_view", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_source_document_view", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "4_dyTqEc9", "6a698a857b984ccde5a4756f46f8b84808e83085ba92d6835ef8099fb3aea31f");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_source_document_view", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabSectionUngroupRatiosProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_section_ungroup_ratios: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {group/ungroup ratios field name} - allows users to drill down on subfields of ratios

Note:
Capture the number of times users are drilling down each category of ratios
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/MW7NISOz8/trigger/RoubxCGJh
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/MW7NISOz8}
 */
export function financialsTabSectionUngroupRatios(
  properties: FinancialsTabSectionUngroupRatiosProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "MW7NISOz8", "8932600ca694aaefa849ef086aea719ec20f7dd7c7c860dd21e56f1662fd309a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_section_ungroup_ratios", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("MW7NISOz8", "financials_tab_section_ungroup_ratios", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_section_ungroup_ratios", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "MW7NISOz8", "8932600ca694aaefa849ef086aea719ec20f7dd7c7c860dd21e56f1662fd309a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_section_ungroup_ratios", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabCurrencyChangeProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_currency_change: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {currency dropdown}

Note:
capture number of times a user switches from default currency to another currency that's available in the dropdown
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/EsEc5GUug/trigger/YV72GHDaJ
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/EsEc5GUug}
 */
export function financialsTabCurrencyChange(
  properties: FinancialsTabCurrencyChangeProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "EsEc5GUug", "a7fa1cfcf4b97d89f897b18b7697d89c322121f678859f971d816e684ac097f9", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_currency_change", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("EsEc5GUug", "financials_tab_currency_change", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_currency_change", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "EsEc5GUug", "a7fa1cfcf4b97d89f897b18b7697d89c322121f678859f971d816e684ac097f9");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_currency_change", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsKeyIndicatorsWidgetExportProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_key_indicators_widget_export: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: "Key Financials"
  depth: undefined
  id: undefined
  name: "Export"

Note:
Capture the number of times users export key financials on company pages
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/6Cza1XKrX/trigger/q6qdJFh0X
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/6Cza1XKrX}
 */
export function financialsKeyIndicatorsWidgetExport(
  properties: FinancialsKeyIndicatorsWidgetExportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "6Cza1XKrX", "593e529b7764b60aa2344dae7a8637aff582269c8a2e66457e2c3b9f4492bf4a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_key_indicators_widget_export", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("6Cza1XKrX", "financials_key_indicators_widget_export", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_key_indicators_widget_export", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "6Cza1XKrX", "593e529b7764b60aa2344dae7a8637aff582269c8a2e66457e2c3b9f4492bf4a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_key_indicators_widget_export", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsPeerComparisonWidgetExportProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_peer_comparison_widget_export: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: "Peer Comparison"
  depth: undefined
  id: undefined
  name: "Export"

Note:
Capture the number of times users export peer comparison on company pages
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/9LliSWBeY/trigger/2mRXoUkJ2
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/9LliSWBeY}
 */
export function financialsPeerComparisonWidgetExport(
  properties: FinancialsPeerComparisonWidgetExportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "9LliSWBeY", "920c98a797175c879ea331fd0742b09270beaf4e83cad9b38789b84e063ac517", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_peer_comparison_widget_export", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("9LliSWBeY", "financials_peer_comparison_widget_export", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_peer_comparison_widget_export", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "9LliSWBeY", "920c98a797175c879ea331fd0742b09270beaf4e83cad9b38789b84e063ac517");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_peer_comparison_widget_export", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsPeerComparisonWidgetToggleViewClickProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_peer_comparison_widget_toggle_view_click: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName: "Peer Comparison"
  depth: undefined
  id: undefined
  name: "Toggle"

Note:
Capture the number of times users witch to table view and chart view that's found on peer comparison widget
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RTwjk_pQW/trigger/BjuB737rg
 * 2.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RTwjk_pQW/trigger/vfkKbhCiW
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RTwjk_pQW}
 */
export function financialsPeerComparisonWidgetToggleViewClick(
  properties: FinancialsPeerComparisonWidgetToggleViewClickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "RTwjk_pQW", "b34c9248b97d995f98a3089edb43df0561261f0edce2055f129df7956dfdcd88", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_peer_comparison_widget_toggle_view_click", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("RTwjk_pQW", "financials_peer_comparison_widget_toggle_view_click", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_peer_comparison_widget_toggle_view_click", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "RTwjk_pQW", "b34c9248b97d995f98a3089edb43df0561261f0edce2055f129df7956dfdcd88");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_peer_comparison_widget_toggle_view_click", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsTabExportProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_tab_export: eventDetails:
  category: "financials"
  type: Txt
  siteSection: "Non Rated Issuers"
  moduleName:undefined
  depth: undefined
  id: undefined
  name: "Export"

Note:
Capture the number of times users exports financials from the financials page

- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Dm9Ea99pE/trigger/5SeRR6rvK
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Dm9Ea99pE}
 */
export function financialsTabExport(properties: FinancialsTabExportProperties
  ) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Dm9Ea99pE", "e7aa17d3ab8482c8104973b3bfe3deeb52794f2f950fb4f38e14d49f5893c7d7", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_tab_export", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Dm9Ea99pE", "financials_tab_export", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_tab_export", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Dm9Ea99pE", "e7aa17d3ab8482c8104973b3bfe3deeb52794f2f950fb4f38e14d49f5893c7d7");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_tab_export", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface FinancialsKeyIndicatorsWidgetCtaClickProperties {
  dataAnalyticsLink: string;
}
/**
 * financials_key_indicators_widget_cta_click: eventDetails:
  category: "financials"
  type: "Txt"
  siteSection: "Non Rated Issuers"
  moduleName:"Key financials"
  depth: undefined
  id: undefined
  name: "CTA"

Note:
Capture the number of times users click on the "View All Financials
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2uOZ95LT4/trigger/xx3XSb1r4
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2uOZ95LT4}
 */
export function financialsKeyIndicatorsWidgetCtaClick(
  properties: FinancialsKeyIndicatorsWidgetCtaClickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "2uOZ95LT4", "42876ff2cca437274f8854c68ccb82963ba8e3974b331d33bd6c9c21d0344733", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("financials_key_indicators_widget_cta_click", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("2uOZ95LT4", "financials_key_indicators_widget_cta_click", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("financials_key_indicators_widget_cta_click", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "2uOZ95LT4", "42876ff2cca437274f8854c68ccb82963ba8e3974b331d33bd6c9c21d0344733");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("financials_key_indicators_widget_cta_click", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentOverallViewMethodologySummaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_overall_view_methodology_summary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Overall"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view methodology summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/O016GLT8G/trigger/08uJPiA_c
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/O016GLT8G}
 */
export function evEsgAssessmentOverallViewMethodologySummary(
  properties: EvEsgAssessmentOverallViewMethodologySummaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "O016GLT8G", "4279b63ef7745d9958503b3605b253017740f67e9c31379626a9739ea8d0dc8b", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_overall_view_methodology_summary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("O016GLT8G", "ev_esg_assessment_overall_view_methodology_summary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_overall_view_methodology_summary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "O016GLT8G", "4279b63ef7745d9958503b3605b253017740f67e9c31379626a9739ea8d0dc8b");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_overall_view_methodology_summary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisViewMethodologySummaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_view_methodology_summary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Credit Impact Score"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view methodology summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xccfQPkHY/trigger/Au4k_3sQy
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xccfQPkHY}
 */
export function evEsgInCreditCisViewMethodologySummary(
  properties: EvEsgInCreditCisViewMethodologySummaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "xccfQPkHY", "7e3ce8d8d60445c24bc9fb597c905f9e0dac5551ac763c4cf8fd3bd68f58fe78", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_view_methodology_summary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("xccfQPkHY", "ev_esg_in_credit_cis_view_methodology_summary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_view_methodology_summary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "xccfQPkHY", "7e3ce8d8d60445c24bc9fb597c905f9e0dac5551ac763c4cf8fd3bd68f58fe78");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_view_methodology_summary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentOverallViewMethodologyDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_overall_view_methodology_document: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Overall"
  moduleName: "Methodology Summary"
  depth: "Document"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the methodology document
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/KvCDsLOOW/trigger/4NDSTXYc4
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/KvCDsLOOW}
 */
export function evEsgAssessmentOverallViewMethodologyDocument(
  properties: EvEsgAssessmentOverallViewMethodologyDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "KvCDsLOOW", "8b7d21ea9cd6045da3d818bcf5725ad42158ab92239b2230f0f9c09f66ce5174", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_overall_view_methodology_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("KvCDsLOOW", "ev_esg_assessment_overall_view_methodology_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_overall_view_methodology_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "KvCDsLOOW", "8b7d21ea9cd6045da3d818bcf5725ad42158ab92239b2230f0f9c09f66ce5174");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_overall_view_methodology_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentIncidentsViewMethodologySummaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_incidents_view_methodology_summary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Incidents Overview"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view methodology summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RHRqcOEKY/trigger/i8gBN4ktt
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RHRqcOEKY}
 */
export function evEsgAssessmentIncidentsViewMethodologySummary(
  properties: EvEsgAssessmentIncidentsViewMethodologySummaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "RHRqcOEKY", "c29bcab7deab20ac0d991ae740130da58b5fc3ef9b9ec21852153a10043fe9e3", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_incidents_view_methodology_summary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("RHRqcOEKY", "ev_esg_assessment_incidents_view_methodology_summary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_incidents_view_methodology_summary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "RHRqcOEKY", "c29bcab7deab20ac0d991ae740130da58b5fc3ef9b9ec21852153a10043fe9e3");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_incidents_view_methodology_summary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentOverallViewCompanyReportProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_overall_view_company_report: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Overall"
  moduleName: undefined
  depth: "Document"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the company report
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kcE9zxv1G/trigger/8f1j3MWF_
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kcE9zxv1G}
 */
export function evEsgAssessmentOverallViewCompanyReport(
  properties: EvEsgAssessmentOverallViewCompanyReportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kcE9zxv1G", "80eeb7b54caa85499cd8901aedecb3b1131404b21532fee7b7d795be36a5db41", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_overall_view_company_report", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kcE9zxv1G", "ev_esg_assessment_overall_view_company_report", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_overall_view_company_report", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kcE9zxv1G", "80eeb7b54caa85499cd8901aedecb3b1131404b21532fee7b7d795be36a5db41");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_overall_view_company_report", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentOverallViewSectorReportProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_overall_view_sector_report: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Overall"
  moduleName: undefined
  depth: "Document"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the sector report
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/22EOhlPBT/trigger/YGrTTBFFd
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/22EOhlPBT}
 */
export function evEsgAssessmentOverallViewSectorReport(
  properties: EvEsgAssessmentOverallViewSectorReportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "22EOhlPBT", "0b16505da4799d2eab734e89001ad7cee030db363d196da99d58aca48b6afb24", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_overall_view_sector_report", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("22EOhlPBT", "ev_esg_assessment_overall_view_sector_report", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_overall_view_sector_report", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "22EOhlPBT", "0b16505da4799d2eab734e89001ad7cee030db363d196da99d58aca48b6afb24");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_overall_view_sector_report", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentPillarFilterDriversProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_pillar_filter_drivers: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Pillar"
  moduleName: {"E" or "S" or "G"}
  depth: "Filter"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to filter the drivers to display all or just the most material
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yvzJMKXlH/trigger/m_Tpvxr5r
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yvzJMKXlH}
 */
export function evEsgAssessmentPillarFilterDrivers(
  properties: EvEsgAssessmentPillarFilterDriversProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "yvzJMKXlH", "b012d60cdcc0434b570313205aa25668082464f6e2123ef57455b4cb71f155e2", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_pillar_filter_drivers", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("yvzJMKXlH", "ev_esg_assessment_pillar_filter_drivers", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_pillar_filter_drivers", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "yvzJMKXlH", "b012d60cdcc0434b570313205aa25668082464f6e2123ef57455b4cb71f155e2");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_pillar_filter_drivers", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentPillarViewDriverDetailProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_pillar_view_driver_detail: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Pillar"
  moduleName: {"E" or "S" or "G"}
  depth: "Driver"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to view driver details
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/GYJRtLvKG/trigger/ofjAl-sE_
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/GYJRtLvKG}
 */
export function evEsgAssessmentPillarViewDriverDetail(
  properties: EvEsgAssessmentPillarViewDriverDetailProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "GYJRtLvKG", "15656e6147fb31fb69a29f3ba825762eeac6044691838e901b6e7fd2222d946c", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_pillar_view_driver_detail", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("GYJRtLvKG", "ev_esg_assessment_pillar_view_driver_detail", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_pillar_view_driver_detail", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "GYJRtLvKG", "15656e6147fb31fb69a29f3ba825762eeac6044691838e901b6e7fd2222d946c");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_pillar_view_driver_detail", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentLatestIncidentsViewIncidentDetailProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_latest_incidents_view_incident_detail: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Latest Incidents"
  moduleName: undefined
  depth: undefined
  id: {inc id}
  name: "View Incident"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view incident details
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/KfwEvXW-p/trigger/ye2yKKELh
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/KfwEvXW-p}
 */
export function evEsgAssessmentLatestIncidentsViewIncidentDetail(
  properties: EvEsgAssessmentLatestIncidentsViewIncidentDetailProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "KfwEvXW-p", "4256024a7bc4642a736f452b3ac4c652817c7be6ff79f81371b938e31db2b92e", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_latest_incidents_view_incident_detail", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("KfwEvXW-p", "ev_esg_assessment_latest_incidents_view_incident_detail", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_latest_incidents_view_incident_detail", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "KfwEvXW-p", "4256024a7bc4642a736f452b3ac4c652817c7be6ff79f81371b938e31db2b92e");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_latest_incidents_view_incident_detail", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentLatestIncidentsFilterProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_latest_incidents_filter: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Latest Incidents"
  moduleName: undefined
  depth: "Filter"
  id: {values}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to filter the latest incidents

Note: Capture any of the filters and the selections made
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Ryi-IdYrh/trigger/DZzDfIDsG
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Ryi-IdYrh}
 */
export function evEsgAssessmentLatestIncidentsFilter(
  properties: EvEsgAssessmentLatestIncidentsFilterProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Ryi-IdYrh", "f513ab076ece2997678dc42f273cd80e95207460c1a2613243daec01d37c5aae", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_latest_incidents_filter", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Ryi-IdYrh", "ev_esg_assessment_latest_incidents_filter", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_latest_incidents_filter", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Ryi-IdYrh", "f513ab076ece2997678dc42f273cd80e95207460c1a2613243daec01d37c5aae");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_latest_incidents_filter", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentDriverDetailViewIncidentDetailProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_driver_detail_view_incident_detail: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Driver Detail"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view incident details
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2TZ5L_VE3/trigger/sCzvKjC71
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2TZ5L_VE3}
 */
export function evEsgAssessmentDriverDetailViewIncidentDetail(
  properties: EvEsgAssessmentDriverDetailViewIncidentDetailProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "2TZ5L_VE3", "9a71168de85a496a649cf375841ff735767fd5426c92eee05279b4bdceba4656", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_driver_detail_view_incident_detail", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("2TZ5L_VE3", "ev_esg_assessment_driver_detail_view_incident_detail", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_driver_detail_view_incident_detail", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "2TZ5L_VE3", "9a71168de85a496a649cf375841ff735767fd5426c92eee05279b4bdceba4656");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_driver_detail_view_incident_detail", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgAssessmentDriverDetailGotoNextPrevProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_assessment_driver_detail_goto_next_prev: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Driver Detail"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: "Next-Prev"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to go to the next or previous driver
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/5MTG3RnN6/trigger/_zsQz5aUh
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/5MTG3RnN6}
 */
export function evEsgAssessmentDriverDetailGotoNextPrev(
  properties: EvEsgAssessmentDriverDetailGotoNextPrevProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "5MTG3RnN6", "fcb21e8d7456b5fd78c4a92fbabf30e676a403a1f32c45cfbc3131f0e290b2b4", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_assessment_driver_detail_goto_next_prev", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("5MTG3RnN6", "ev_esg_assessment_driver_detail_goto_next_prev", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_assessment_driver_detail_goto_next_prev", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "5MTG3RnN6", "fcb21e8d7456b5fd78c4a92fbabf30e676a403a1f32c45cfbc3131f0e290b2b4");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_assessment_driver_detail_goto_next_prev", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisViewCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_view_commentary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Credit Impact Score"
  moduleName: "CIS"
  depth: "Score"
  id: {score}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the full commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/B7Hnt7AzB/trigger/DQ2e6b9ag
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/B7Hnt7AzB}
 */
export function evEsgInCreditCisViewCommentary(
  properties: EvEsgInCreditCisViewCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "B7Hnt7AzB", "d51585f768648a4df4a9d3a90f66efdaae2219b5300040473ecf5dce2c46646c", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_view_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("B7Hnt7AzB", "ev_esg_in_credit_cis_view_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_view_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "B7Hnt7AzB", "d51585f768648a4df4a9d3a90f66efdaae2219b5300040473ecf5dce2c46646c");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_view_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisViewMethodologyDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_view_methodology_document: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Credit Impact Score"
  moduleName: "Methodology Summary" or "Score Detail"
  depth: "Document"
  id: {doc id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the methodology document from the Methodology Summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Ea1rWEPQ0/trigger/u7GC3oLDO
 * 2. User clicks to view the methodology document from the Score Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Ea1rWEPQ0/trigger/ZhAOPUplK
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Ea1rWEPQ0}
 */
export function evEsgInCreditCisViewMethodologyDocument(
  properties: EvEsgInCreditCisViewMethodologyDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Ea1rWEPQ0", "c386a115fdc5548087c4d2e884773b0ee93829939e0c73843574a84a8da1dda4", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_view_methodology_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Ea1rWEPQ0", "ev_esg_in_credit_cis_view_methodology_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_view_methodology_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Ea1rWEPQ0", "c386a115fdc5548087c4d2e884773b0ee93829939e0c73843574a84a8da1dda4");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_view_methodology_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisViewHeatMapDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_view_heat_map_document: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Credit Impact Score"
  moduleName: undefined
  depth: "Document"
  id: {doc id}
  name: {link name} + " Heat Map"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view either heat map document
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yCyCR-Ykj/trigger/b7q4QpnPY
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yCyCR-Ykj}
 */
export function evEsgInCreditCisViewHeatMapDocument(
  properties: EvEsgInCreditCisViewHeatMapDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "yCyCR-Ykj", "f04f982456bfb9c5f66d1dc363c9efc0d95a700043546963bfd9ab717dcf48bc", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_view_heat_map_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("yCyCR-Ykj", "ev_esg_in_credit_cis_view_heat_map_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_view_heat_map_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "yCyCR-Ykj", "f04f982456bfb9c5f66d1dc363c9efc0d95a700043546963bfd9ab717dcf48bc");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_view_heat_map_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisViewInfographicProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_view_infographic: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Credit Impact Score"
  moduleName: "Methodology Summary"
  depth: "Infographic"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the infographic
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RdST4cKUU/trigger/xxj8VRXNp
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RdST4cKUU}
 */
export function evEsgInCreditCisViewInfographic(
  properties: EvEsgInCreditCisViewInfographicProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "RdST4cKUU", "27b349d41a97534e542a03da1b8603300c40104a2713285fd94b9835b48e6aeb", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_view_infographic", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("RdST4cKUU", "ev_esg_in_credit_cis_view_infographic", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_view_infographic", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "RdST4cKUU", "27b349d41a97534e542a03da1b8603300c40104a2713285fd94b9835b48e6aeb");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_view_infographic", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisViewScoreScaleProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_view_score_scale: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Credit Impact Score"
  moduleName: "Methodology Summary"
  depth: undefined
  id: {score}
  name: "Score Scale"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks on the score scale to expand/collapse the definition
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/dewO9I47J/trigger/l8jWMADNR
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/dewO9I47J}
 */
export function evEsgInCreditCisViewScoreScale(
  properties: EvEsgInCreditCisViewScoreScaleProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "dewO9I47J", "e64f4804d57b2165f8e6871e83f5e93420a47688238919d33ab3530fb7786279", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_view_score_scale", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("dewO9I47J", "ev_esg_in_credit_cis_view_score_scale", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_view_score_scale", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "dewO9I47J", "e64f4804d57b2165f8e6871e83f5e93420a47688238919d33ab3530fb7786279");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_view_score_scale", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisDistributionFilterChartProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_distribution_filter_chart: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "CIS Distribution"
  moduleName: undefined
  depth: "Filter"
  id: {score}
  name: "Chart"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks either the the bar or percentage on the chart to view list of orgs with that score
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/JCylprST6/trigger/2r6qckR_S
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/JCylprST6}
 */
export function evEsgInCreditCisDistributionFilterChart(
  properties: EvEsgInCreditCisDistributionFilterChartProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "JCylprST6", "3012333824307aac8746f0fa8e491e2c59a98006cf9b446ee9b6175d9866fd00", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_distribution_filter_chart", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("JCylprST6", "ev_esg_in_credit_cis_distribution_filter_chart", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_distribution_filter_chart", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "JCylprST6", "3012333824307aac8746f0fa8e491e2c59a98006cf9b446ee9b6175d9866fd00");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_distribution_filter_chart", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisDistributionFilterScoreProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_distribution_filter_score: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "CIS Distribution"
  moduleName: undefined
  depth: "Filter"
  id: {score}
  name: "Score"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to filter the list of orgs by score
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/jLpNK9gv_/trigger/U3kBb5iTV
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/jLpNK9gv_}
 */
export function evEsgInCreditCisDistributionFilterScore(
  properties: EvEsgInCreditCisDistributionFilterScoreProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "jLpNK9gv_", "e3e6af7fe998a34a59ac337a7606567ff110def0cea1e79c5e6db41cc330641b", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_distribution_filter_score", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("jLpNK9gv_", "ev_esg_in_credit_cis_distribution_filter_score", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_distribution_filter_score", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "jLpNK9gv_", "e3e6af7fe998a34a59ac337a7606567ff110def0cea1e79c5e6db41cc330641b");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_distribution_filter_score", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisDistributionSortProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_distribution_sort: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "CIS Distribution"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: "Sort - " + {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to sort the list of orgs by name or score
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/mvJ2irpXX/trigger/xwH2WWlkU
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/mvJ2irpXX}
 */
export function evEsgInCreditCisDistributionSort(
  properties: EvEsgInCreditCisDistributionSortProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "mvJ2irpXX", "484e0ae334ce4f4383176e1adc6a22d95d8e25c8256b91a6b376ba882cece0cf", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_distribution_sort", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("mvJ2irpXX", "ev_esg_in_credit_cis_distribution_sort", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_distribution_sort", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "mvJ2irpXX", "484e0ae334ce4f4383176e1adc6a22d95d8e25c8256b91a6b376ba882cece0cf");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_distribution_sort", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisDistributionDetailGotoScreenerProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_distribution_detail_goto_screener: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "CIS Distribution"
  moduleName: undefined
  depth: "Screener"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to go to the Screener
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/EN6zz_ZIu/trigger/5QE8-xNrE
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/EN6zz_ZIu}
 */
export function evEsgInCreditCisDistributionDetailGotoScreener(
  properties: EvEsgInCreditCisDistributionDetailGotoScreenerProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "EN6zz_ZIu", "72f2526b26bb88aa8e8cb33318ed070deb7a6a7c65bd3569d4d889d6302fa863", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_distribution_detail_goto_screener", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("EN6zz_ZIu", "ev_esg_in_credit_cis_distribution_detail_goto_screener", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_distribution_detail_goto_screener", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "EN6zz_ZIu", "72f2526b26bb88aa8e8cb33318ed070deb7a6a7c65bd3569d4d889d6302fa863");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_distribution_detail_goto_screener", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditCisDistributionDetailGotoEvOrCvProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_cis_distribution_detail_goto_ev_or_cv: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "CIS Distribution"
  moduleName: undefined
  depth: "Screener"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to go to either the Company/Entity page or the ESGView page for the org
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ik-TLlnrz/trigger/M5dIg3PLt
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ik-TLlnrz}
 */
export function evEsgInCreditCisDistributionDetailGotoEvOrCv(
  properties: EvEsgInCreditCisDistributionDetailGotoEvOrCvProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "ik-TLlnrz", "c5af0c020ae486a6f530522ac04ecb5dbedba015ef7105592b4606aaad3bd793", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_cis_distribution_detail_goto_ev_or_cv", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("ik-TLlnrz", "ev_esg_in_credit_cis_distribution_detail_goto_ev_or_cv", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_cis_distribution_detail_goto_ev_or_cv", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "ik-TLlnrz", "c5af0c020ae486a6f530522ac04ecb5dbedba015ef7105592b4606aaad3bd793");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_cis_distribution_detail_goto_ev_or_cv", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsDistributionFilterChartProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_distribution_filter_chart: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "IPS Distribution"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Filter"
  id: {score}
  name: "Chart"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks either the the bar or percentage on the chart to view list of orgs with that score
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/0TK7Y9G6j/trigger/rMYyjNkFx
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/0TK7Y9G6j}
 */
export function evEsgInCreditIpsDistributionFilterChart(
  properties: EvEsgInCreditIpsDistributionFilterChartProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "0TK7Y9G6j", "f1b3c894e7dc325134d3bc4f15e0ecddc915f3741b0c2d0a7373ff7640041465", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_distribution_filter_chart", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("0TK7Y9G6j", "ev_esg_in_credit_ips_distribution_filter_chart", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_distribution_filter_chart", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "0TK7Y9G6j", "f1b3c894e7dc325134d3bc4f15e0ecddc915f3741b0c2d0a7373ff7640041465");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_distribution_filter_chart", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsDistributionFilterScoreProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_distribution_filter_score: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "IPS Distribution"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Filter"
  id: {score}
  name: "Score"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to filter the list of orgs by score
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/koPUxrXmW/trigger/DBZxWkmIV
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/koPUxrXmW}
 */
export function evEsgInCreditIpsDistributionFilterScore(
  properties: EvEsgInCreditIpsDistributionFilterScoreProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "koPUxrXmW", "47a781713e320d2404edeb6cae4573d5d536181d474be6a13193637ef17e41f8", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_distribution_filter_score", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("koPUxrXmW", "ev_esg_in_credit_ips_distribution_filter_score", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_distribution_filter_score", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "koPUxrXmW", "47a781713e320d2404edeb6cae4573d5d536181d474be6a13193637ef17e41f8");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_distribution_filter_score", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsDistributionSortProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_distribution_sort: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "IPS Distribution"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: undefined
  id: undefined
  name: "Sort - " + {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to sort the list of orgs by name or score
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/pQNwfAkev/trigger/Xhn5VtA9G
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/pQNwfAkev}
 */
export function evEsgInCreditIpsDistributionSort(
  properties: EvEsgInCreditIpsDistributionSortProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "pQNwfAkev", "172299a09b8199f9ee40a21c1f8d6711bd620ffee945922db5c1a8b531737e85", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_distribution_sort", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("pQNwfAkev", "ev_esg_in_credit_ips_distribution_sort", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_distribution_sort", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "pQNwfAkev", "172299a09b8199f9ee40a21c1f8d6711bd620ffee945922db5c1a8b531737e85");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_distribution_sort", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgDocumentsViewDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_documents_view_document: eventDetails:
  category: "ESG Documents"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: "Document"
  id: {doc id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"
 *
 * When to trigger this event:
 * 1. User clicks to view a document

Note: Documents listed will differ by tab
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1pEgIytjU/trigger/bLDtJYdwR
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1pEgIytjU}
 */
export function evEsgDocumentsViewDocument(
  properties: EvEsgDocumentsViewDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1pEgIytjU", "8a3490eba5df4d3fd31e881fdf573c73b4144893518f7be1a9f2c331bc7f6640", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_documents_view_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1pEgIytjU", "ev_esg_documents_view_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_documents_view_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1pEgIytjU", "8a3490eba5df4d3fd31e881fdf573c73b4144893518f7be1a9f2c331bc7f6640");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_documents_view_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsDistributionDetailGotoEvOrCvProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_distribution_detail_goto_ev_or_cv: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "IPS Distribution"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Org"
  id: {org id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to go to either the Company/Entity page or the ESGView page for the org
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/CzIDwyoeQ/trigger/L6e96qvw-
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/CzIDwyoeQ}
 */
export function evEsgInCreditIpsDistributionDetailGotoEvOrCv(
  properties: EvEsgInCreditIpsDistributionDetailGotoEvOrCvProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "CzIDwyoeQ", "4a05e9ffa46f58bc7ca82c53b66994a2e78906bc258bf40ac3a31af5960244fc", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_distribution_detail_goto_ev_or_cv", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("CzIDwyoeQ", "ev_esg_in_credit_ips_distribution_detail_goto_ev_or_cv", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_distribution_detail_goto_ev_or_cv", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "CzIDwyoeQ", "4a05e9ffa46f58bc7ca82c53b66994a2e78906bc258bf40ac3a31af5960244fc");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_distribution_detail_goto_ev_or_cv", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvTabsProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_tabs: eventDetails:
  category: "Tabs"
  type: "Btn"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks a tab
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/tONrJ3GGc/trigger/UbGlEwof8
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/tONrJ3GGc}
 */
export function evTabs(properties: EvTabsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "tONrJ3GGc", "bc32b7ea930464783c8ae43781d561ad06f6fad201a59028547c5a01f30719ab", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_tabs", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("tONrJ3GGc", "ev_tabs", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_tabs", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "tONrJ3GGc", "bc32b7ea930464783c8ae43781d561ad06f6fad201a59028547c5a01f30719ab");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_tabs", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewMethodologySummaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_methodology_summary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Issuer Profile Scores"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view methodology summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/QuEjLprPg/trigger/Hw82Ul1n2
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/QuEjLprPg}
 */
export function evEsgInCreditIpsViewMethodologySummary(
  properties: EvEsgInCreditIpsViewMethodologySummaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "QuEjLprPg", "1de2bdf9fc4f6a9c192f142ac28cb36497d38ba5e674c1947fc748f56fbd82d4", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_methodology_summary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("QuEjLprPg", "ev_esg_in_credit_ips_view_methodology_summary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_methodology_summary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "QuEjLprPg", "1de2bdf9fc4f6a9c192f142ac28cb36497d38ba5e674c1947fc748f56fbd82d4");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_methodology_summary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_commentary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Issuer Profile Scores"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Score"
  id: {score}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to view the full commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2aaNhL_WF/trigger/n1oTCyhci
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/2aaNhL_WF}
 */
export function evEsgInCreditIpsViewCommentary(
  properties: EvEsgInCreditIpsViewCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "2aaNhL_WF", "7ff0830a3b1e869978c56e192677c254e791fd2954995caac8dbf6448e8ec33a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("2aaNhL_WF", "ev_esg_in_credit_ips_view_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "2aaNhL_WF", "7ff0830a3b1e869978c56e192677c254e791fd2954995caac8dbf6448e8ec33a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewCtiScorecardProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_cti_scorecard: eventDetails:
  category: {tab name}
  type: "Img"
  siteSection: "Issuer Profile Scores"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: "CTI scorecard"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. Use clicks to view the CTI scorecard

Note: By the time Avo is implemented for ESGView, CTA will have been renamed to CTI
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/0X7SAKzlc/trigger/vPA0suZiV
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/0X7SAKzlc}
 */
export function evEsgInCreditIpsViewCtiScorecard(
  properties: EvEsgInCreditIpsViewCtiScorecardProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "0X7SAKzlc", "4621bd442e70a12d4ec3ed96aa29809f88dd90c8222581f04070150f4bd9d584", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_cti_scorecard", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("0X7SAKzlc", "ev_esg_in_credit_ips_view_cti_scorecard", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_cti_scorecard", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "0X7SAKzlc", "4621bd442e70a12d4ec3ed96aa29809f88dd90c8222581f04070150f4bd9d584");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_cti_scorecard", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewCriteriaCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_criteria_commentary: eventDetails:
  category: {tab name}
  type: "Img"
  siteSection: "Issuer Profile Scores"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Commentary"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to view the criteria commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/v4I6q7-th/trigger/8daheOVMS
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/v4I6q7-th}
 */
export function evEsgInCreditIpsViewCriteriaCommentary(
  properties: EvEsgInCreditIpsViewCriteriaCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "v4I6q7-th", "fcca7b6b39941d6e4f6c6f469f9d4f322261be20f2aeb5aee0a0a8da3a611053", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_criteria_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("v4I6q7-th", "ev_esg_in_credit_ips_view_criteria_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_criteria_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "v4I6q7-th", "fcca7b6b39941d6e4f6c6f469f9d4f322261be20f2aeb5aee0a0a8da3a611053");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_criteria_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewCtiFrameworkDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_cti_framework_document: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Issuer Profile Scores"
  moduleName: undefined
  depth: "Document"
  id: {doc id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the CTI framework document from any of the scorecards (they differ in format/content by sector)
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/9apGhVUDD/trigger/hfw52xOEK
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/9apGhVUDD}
 */
export function evEsgInCreditIpsViewCtiFrameworkDocument(
  properties: EvEsgInCreditIpsViewCtiFrameworkDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "9apGhVUDD", "1486ebdf8a6d302aa897183d02a4ae554c584dc55337e34f0b7d9ba8d1d425fa", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_cti_framework_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("9apGhVUDD", "ev_esg_in_credit_ips_view_cti_framework_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_cti_framework_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "9apGhVUDD", "1486ebdf8a6d302aa897183d02a4ae554c584dc55337e34f0b7d9ba8d1d425fa");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_cti_framework_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewMethodologyDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_methodology_document: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Issuer Profile Scores"
  moduleName: "Methodology Summary" or "Score Detail" or "Commentary Detail"
  depth: "Document"
  id: {doc id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the methodology document from the Methodology Summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xWE1B8Q2I/trigger/riUlvDk6G
 * 2. For E or S or G, user clicks to view the methodology document from the Score Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xWE1B8Q2I/trigger/z2zJlwmrJ
 * 3. For E or S or G, user clicks to view the methodology document from the Commentary Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xWE1B8Q2I/trigger/0mPkLaTba
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xWE1B8Q2I}
 */
export function evEsgInCreditIpsViewMethodologyDocument(
  properties: EvEsgInCreditIpsViewMethodologyDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "xWE1B8Q2I", "6153501c7ac260a0913877bf8c1119539cb1c1c72ed91827b5da037a2891afe9", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_methodology_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("xWE1B8Q2I", "ev_esg_in_credit_ips_view_methodology_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_methodology_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "xWE1B8Q2I", "6153501c7ac260a0913877bf8c1119539cb1c1c72ed91827b5da037a2891afe9");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_methodology_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewHeatMapDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_heat_map_document: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Issuer Profile Scores"
  moduleName: undefined
  depth: "Document"
  id: {doc id}
  name: {link name} + " Heat Map"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view either heat map document
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/dKPAVJAvG/trigger/UXD8zp_De
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/dKPAVJAvG}
 */
export function evEsgInCreditIpsViewHeatMapDocument(
  properties: EvEsgInCreditIpsViewHeatMapDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "dKPAVJAvG", "0713f29321940146d41c5d3ced649d2699c7861be4300bb93591ea4d033707b0", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_heat_map_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("dKPAVJAvG", "ev_esg_in_credit_ips_view_heat_map_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_heat_map_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "dKPAVJAvG", "0713f29321940146d41c5d3ced649d2699c7861be4300bb93591ea4d033707b0");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_heat_map_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsInfographicProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_infographic: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Issuer Profile Scores"
  moduleName: "Methodology Summary"
  depth: "Infographic"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the infographic
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/audyAFBjB/trigger/53iTJtJb7
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/audyAFBjB}
 */
export function evEsgInCreditIpsInfographic(
  properties: EvEsgInCreditIpsInfographicProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "audyAFBjB", "4a4e1d14d71c449e89728c8721278dfcfbc633cc77305e9f6cb715dbb19a6cbb", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_infographic", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("audyAFBjB", "ev_esg_in_credit_ips_infographic", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_infographic", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "audyAFBjB", "4a4e1d14d71c449e89728c8721278dfcfbc633cc77305e9f6cb715dbb19a6cbb");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_infographic", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsViewScoreScaleProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_view_score_scale: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Issuer Profile Scores"
  moduleName: "Methodology Summary"
  depth: undefined
  id: {score}
  name: "Score Scale"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks on the score scale to expand/collapse the definition
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yOrveHXbj/trigger/LCsVCjAYA
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yOrveHXbj}
 */
export function evEsgInCreditIpsViewScoreScale(
  properties: EvEsgInCreditIpsViewScoreScaleProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "yOrveHXbj", "c627fe20b3d767c1895c48fd47a43fe51907cd68a6a12068e2df0c388a684f69", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_view_score_scale", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("yOrveHXbj", "ev_esg_in_credit_ips_view_score_scale", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_view_score_scale", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "yOrveHXbj", "c627fe20b3d767c1895c48fd47a43fe51907cd68a6a12068e2df0c388a684f69");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_view_score_scale", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonExportProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_export: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: "Export"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to export peers comparison table to Excel
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/PU20KFvto/trigger/4NQIJY9Wl
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/PU20KFvto}
 */
export function evEsgInCreditPeerComparisonExport(
  properties: EvEsgInCreditPeerComparisonExportProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "PU20KFvto", "06fab4289d20e5ef05b5f8cc28f44cf84727213cc0709fb9a6f552d7874492c5", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_export", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("PU20KFvto", "ev_esg_in_credit_peer_comparison_export", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_export", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "PU20KFvto", "06fab4289d20e5ef05b5f8cc28f44cf84727213cc0709fb9a6f552d7874492c5");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_export", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonGotoScreenerProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_goto_screener: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: "Screener"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to go to the Screener
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/dmZsqILxc/trigger/KBz5b7qVe
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/dmZsqILxc}
 */
export function evEsgInCreditPeerComparisonGotoScreener(
  properties: EvEsgInCreditPeerComparisonGotoScreenerProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "dmZsqILxc", "2a92e575b333e9bf1f94da9aebf3473775d21c04f4ddb7bb1276d81e288d8937", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_goto_screener", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("dmZsqILxc", "ev_esg_in_credit_peer_comparison_goto_screener", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_goto_screener", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "dmZsqILxc", "2a92e575b333e9bf1f94da9aebf3473775d21c04f4ddb7bb1276d81e288d8937");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_goto_screener", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonExpandCollapseProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_expand_collapse: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: "Expand - " or "Collapse - " + {column_name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to expand or collapse the column group

Applies to all column groups, i.e. Credit Rating, E, S G
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/tZ-tA7C4c/trigger/vp8plK0eQ
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/tZ-tA7C4c}
 */
export function evEsgInCreditPeerComparisonExpandCollapse(
  properties: EvEsgInCreditPeerComparisonExpandCollapseProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "tZ-tA7C4c", "bc823f51348f53dd77f04be7c9941d29aad688cd0bf0e391185aac742f61f1d7", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_expand_collapse", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("tZ-tA7C4c", "ev_esg_in_credit_peer_comparison_expand_collapse", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_expand_collapse", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "tZ-tA7C4c", "bc823f51348f53dd77f04be7c9941d29aad688cd0bf0e391185aac742f61f1d7");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_expand_collapse", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonGotoEvOrCvProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_goto_ev_or_cv: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: "Org"
  id: {org id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to go to either the Company/Entity page or the ESGView page for the org
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/GKZNiFJUw/trigger/i1D-33YTQ
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/GKZNiFJUw}
 */
export function evEsgInCreditPeerComparisonGotoEvOrCv(
  properties: EvEsgInCreditPeerComparisonGotoEvOrCvProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "GKZNiFJUw", "f86a8083b305fd90cc36820e4f6b7291f0c304bbfd68743212eedb376f67c68a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_goto_ev_or_cv", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("GKZNiFJUw", "ev_esg_in_credit_peer_comparison_goto_ev_or_cv", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_goto_ev_or_cv", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "GKZNiFJUw", "f86a8083b305fd90cc36820e4f6b7291f0c304bbfd68743212eedb376f67c68a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_goto_ev_or_cv", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonViewCisCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_view_cis_commentary: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: "CIS"
  depth: "Score"
  id: {score}
  name: {column name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view the commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/52G0-uOBx/trigger/81pAPBDD4
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/52G0-uOBx}
 */
export function evEsgInCreditPeerComparisonViewCisCommentary(
  properties: EvEsgInCreditPeerComparisonViewCisCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "52G0-uOBx", "5957912832ef2ae267bbfd52a865d89dc2a6ca0c5375fae3489d3b63dd594c27", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_view_cis_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("52G0-uOBx", "ev_esg_in_credit_peer_comparison_view_cis_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_view_cis_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "52G0-uOBx", "5957912832ef2ae267bbfd52a865d89dc2a6ca0c5375fae3489d3b63dd594c27");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_view_cis_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonViewIpsCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_view_ips_commentary: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Score"
  id: {score}
  name: {column name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to view the commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-639T_iim/trigger/g1POzekYp
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-639T_iim}
 */
export function evEsgInCreditPeerComparisonViewIpsCommentary(
  properties: EvEsgInCreditPeerComparisonViewIpsCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "-639T_iim", "080ec4a743f0c15e1a99721ae74323e52085c8b2db70cccb3d3df61bc2159306", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_view_ips_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("-639T_iim", "ev_esg_in_credit_peer_comparison_view_ips_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_view_ips_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "-639T_iim", "080ec4a743f0c15e1a99721ae74323e52085c8b2db70cccb3d3df61bc2159306");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_view_ips_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonIpsViewCriteriaCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_ips_view_criteria_commentary: eventDetails:
  category: {tab name}
  type: "Img"
  siteSection: "Peer Comparison"
  moduleName: "IPS E" or "IPS S" or "IPS G"
  depth: "Commentary"
  id: undefined
  name: {column name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. For E or S or G, user clicks to view the criteria commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/0GKnQKk2K/trigger/bABIPD6oC
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/0GKnQKk2K}
 */
export function evEsgInCreditPeerComparisonIpsViewCriteriaCommentary(
  properties: EvEsgInCreditPeerComparisonIpsViewCriteriaCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "0GKnQKk2K", "f607463c3b122227d1d109f3c06f8c4a0fa615c0f240565c60da2090c3780fb8", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_ips_view_criteria_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("0GKnQKk2K", "ev_esg_in_credit_peer_comparison_ips_view_criteria_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_ips_view_criteria_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "0GKnQKk2K", "f607463c3b122227d1d109f3c06f8c4a0fa615c0f240565c60da2090c3780fb8");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_ips_view_criteria_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonViewMethodologyDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_view_methodology_document: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Peer Comparison"
  moduleName: "Score Detail" or "Commentary Detail"
  depth: "Document"
  id: {doc id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }"
 *
 * When to trigger this event:
 * 1. For CIS, user clicks to view the methodology document from the Score Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xYc8f7QU7/trigger/T4WjpNlCV
 * 2. For CIS E or S or G, user clicks to view the methodology document from the Score Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xYc8f7QU7/trigger/C9jXX2-EM
 * 3. For E or S or G, user clicks to view the methodology document from the Commentary Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xYc8f7QU7/trigger/i1wZyYoCS
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/xYc8f7QU7}
 */
export function evEsgInCreditPeerComparisonViewMethodologyDocument(
  properties: EvEsgInCreditPeerComparisonViewMethodologyDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "xYc8f7QU7", "57eb3b7d4bcb30f9299ac835c0bc208db695b6e29a4392323a7c8cd6092c6116", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_view_methodology_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("xYc8f7QU7", "ev_esg_in_credit_peer_comparison_view_methodology_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_view_methodology_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "xYc8f7QU7", "57eb3b7d4bcb30f9299ac835c0bc208db695b6e29a4392323a7c8cd6092c6116");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_view_methodology_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonAddPeerProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_add_peer: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: undefined
  id: {org id}
  name: "Add Peer"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to add a peer
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ggvAT3_58/trigger/c5bMAZHzX
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ggvAT3_58}
 */
export function evEsgInCreditPeerComparisonAddPeer(
  properties: EvEsgInCreditPeerComparisonAddPeerProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "ggvAT3_58", "f2d609f1b72738f370f5541368208a189f262fb7fe56f5125b2dad58b33813f1", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_add_peer", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("ggvAT3_58", "ev_esg_in_credit_peer_comparison_add_peer", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_add_peer", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "ggvAT3_58", "f2d609f1b72738f370f5541368208a189f262fb7fe56f5125b2dad58b33813f1");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_add_peer", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonExpandSubscriptionProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_expand_subscription: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/RTuPvEyj5}
 */
export function evEsgInCreditPeerComparisonExpandSubscription(
  properties: EvEsgInCreditPeerComparisonExpandSubscriptionProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "RTuPvEyj5", "b116b12b2e0c864171fb511f2175fd278e677bb5b3bcf2ced27c5f85252a5c7c", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_expand_subscription", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("RTuPvEyj5", "ev_esg_in_credit_peer_comparison_expand_subscription", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_expand_subscription", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "RTuPvEyj5", "b116b12b2e0c864171fb511f2175fd278e677bb5b3bcf2ced27c5f85252a5c7c");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_expand_subscription", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditPeerComparisonViewHeatMapDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_peer_comparison_view_heat_map_document: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Peer Comparison"
  moduleName: undefined
  depth: "Document"
  id: {doc id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view either heat map document
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/glqEV_NN3/trigger/kNfJO7MXV
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/glqEV_NN3}
 */
export function evEsgInCreditPeerComparisonViewHeatMapDocument(
  properties: EvEsgInCreditPeerComparisonViewHeatMapDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "glqEV_NN3", "0e17157308965f7786a94a008da99ee7e12e91308924a8b666080d9f06fda088", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_peer_comparison_view_heat_map_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("glqEV_NN3", "ev_esg_in_credit_peer_comparison_view_heat_map_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_peer_comparison_view_heat_map_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "glqEV_NN3", "0e17157308965f7786a94a008da99ee7e12e91308924a8b666080d9f06fda088");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_peer_comparison_view_heat_map_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditSectorHeatMapViewSummaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_sector_heat_map_view_summary: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Sector Heat Map"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view summary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/sMgvTs3wY/trigger/C-FtECmVd
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/sMgvTs3wY}
 */
export function evEsgInCreditSectorHeatMapViewSummary(
  properties: EvEsgInCreditSectorHeatMapViewSummaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "sMgvTs3wY", "3c96c3ceeaa03b441f4b7de81553f729f898d778cd51f87dd8ce4439d541062a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_sector_heat_map_view_summary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("sMgvTs3wY", "ev_esg_in_credit_sector_heat_map_view_summary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_sector_heat_map_view_summary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "sMgvTs3wY", "3c96c3ceeaa03b441f4b7de81553f729f898d778cd51f87dd8ce4439d541062a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_sector_heat_map_view_summary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditSectorHeatMapFilterCategoriesProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_sector_heat_map_filter_categories: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Sector Heat Map"
  moduleName: undefined
  depth: "Filter"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to filter the categories to display all or just the high risk
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/59CGrTR8V/trigger/TNb49-3Qx
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/59CGrTR8V}
 */
export function evEsgInCreditSectorHeatMapFilterCategories(
  properties: EvEsgInCreditSectorHeatMapFilterCategoriesProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "59CGrTR8V", "31fc8f29e690a10d75e16cf1ad983871e774afb9771e9fb3f232843e2e174eb1", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_sector_heat_map_filter_categories", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("59CGrTR8V", "ev_esg_in_credit_sector_heat_map_filter_categories", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_sector_heat_map_filter_categories", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "59CGrTR8V", "31fc8f29e690a10d75e16cf1ad983871e774afb9771e9fb3f232843e2e174eb1");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_sector_heat_map_filter_categories", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditSectorHeatMapViewCommentaryProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_sector_heat_map_view_commentary: eventDetails:
  category: {tab name}
  type: "Img"
  siteSection: "Sector Heat Map"
  moduleName: "E" or "S"
  depth: "Score"
  id: {score}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }or
 *
 * When to trigger this event:
 * 1. For E or S, user clicks to view the full commentary
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kWNcBwVAo/trigger/Zyc0sDX5_
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kWNcBwVAo}
 */
export function evEsgInCreditSectorHeatMapViewCommentary(
  properties: EvEsgInCreditSectorHeatMapViewCommentaryProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kWNcBwVAo", "21e4f9edcc7bf5bfacf5e8c7fdd3425a29261c956e82993b8cfae7bbace75bf7", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_sector_heat_map_view_commentary", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kWNcBwVAo", "ev_esg_in_credit_sector_heat_map_view_commentary", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_sector_heat_map_view_commentary", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kWNcBwVAo", "21e4f9edcc7bf5bfacf5e8c7fdd3425a29261c956e82993b8cfae7bbace75bf7");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_sector_heat_map_view_commentary", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditSectorViewHeatMapDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_sector_view_heat_map_document: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Sector Heat Map"
  moduleName: "Overview" or "Score Detail"
  depth: "Document"
  id: {doc_id}
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view either heat map document from the Overview
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/SrZEzQQRs/trigger/lNxGsvpRu
 * 2. For E, user clicks to view the heat map document from the Score Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/SrZEzQQRs/trigger/TBwJtrYlf
 * 3. For S, user clicks to view the heat map document from the Score Detail
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/SrZEzQQRs/trigger/FvkXavMG1
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/SrZEzQQRs}
 */
export function evEsgInCreditSectorViewHeatMapDocument(
  properties: EvEsgInCreditSectorViewHeatMapDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "SrZEzQQRs", "6807c27734275c7103a0b82cc9bc7db68cec3a41d24d531326290d6351070b0a", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_sector_view_heat_map_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("SrZEzQQRs", "ev_esg_in_credit_sector_view_heat_map_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_sector_view_heat_map_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "SrZEzQQRs", "6807c27734275c7103a0b82cc9bc7db68cec3a41d24d531326290d6351070b0a");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_sector_view_heat_map_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditSectorHeatMapViewScoreScaleProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_sector_heat_map_view_score_scale: eventDetails:
  category: {tab name}
  type: "Bttn"
  siteSection: "Sector Heat Map"
  moduleName: "Overview"
  depth: undefined
  id: {score}
  name: "Score Scale"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks on the score scale to expand/collapse the definition
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/iXo7XTevj/trigger/8ARlI_Uzu
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/iXo7XTevj}
 */
export function evEsgInCreditSectorHeatMapViewScoreScale(
  properties: EvEsgInCreditSectorHeatMapViewScoreScaleProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "iXo7XTevj", "ba82d18cf8711ca274c8c687a06418c13098226945c1dd62cda89fbb33c77c17", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_sector_heat_map_view_score_scale", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("iXo7XTevj", "ev_esg_in_credit_sector_heat_map_view_score_scale", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_sector_heat_map_view_score_scale", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "iXo7XTevj", "ba82d18cf8711ca274c8c687a06418c13098226945c1dd62cda89fbb33c77c17");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_sector_heat_map_view_score_scale", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditRelatedResearchGotoCvProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_related_research_goto_cv: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Related Research"
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to go to CreditView research page
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/PUfv5uMjE/trigger/Mq4Om8NL7
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/PUfv5uMjE}
 */
export function evEsgInCreditRelatedResearchGotoCv(
  properties: EvEsgInCreditRelatedResearchGotoCvProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "PUfv5uMjE", "08ce76c0d377a8c7200ba0f112a0d813b5d0fa88b61355d73897caecd869f272", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_related_research_goto_cv", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("PUfv5uMjE", "ev_esg_in_credit_related_research_goto_cv", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_related_research_goto_cv", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "PUfv5uMjE", "08ce76c0d377a8c7200ba0f112a0d813b5d0fa88b61355d73897caecd869f272");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_related_research_goto_cv", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgInCreditIpsFilterCriteriaProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_in_credit_ips_filter_criteria: eventDetails:
  category: {tab name}
  type: "Txt"
  siteSection: "Issuer Profile Scores"
  moduleName: undefined
  depth: "Filter"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to filter the criteria to display all or just the most material
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/vN7eeRghT/trigger/hp6OJW86p
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/vN7eeRghT}
 */
export function evEsgInCreditIpsFilterCriteria(
  properties: EvEsgInCreditIpsFilterCriteriaProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "vN7eeRghT", "fa7de9e92d7c53d387013cf8d8c83930ae34faaefc49404fb670d460726336e6", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_in_credit_ips_filter_criteria", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("vN7eeRghT", "ev_esg_in_credit_ips_filter_criteria", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_in_credit_ips_filter_criteria", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "vN7eeRghT", "fa7de9e92d7c53d387013cf8d8c83930ae34faaefc49404fb670d460726336e6");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_in_credit_ips_filter_criteria", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface EvEsgDownloadsViewDocumentProperties {
  dataAnalyticsLink: string;
}
/**
 * ev_esg_downloads_view_document: eventDetails:
  category: "Downloads"
  type: "Txt"
  siteSection: undefined
  moduleName: {category}
  depth: "Document"
  id: undefined
  name: {link name}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. User clicks to view a data file
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-bNF84ub4/trigger/v7WLpDduOm
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/-bNF84ub4}
 */
export function evEsgDownloadsViewDocument(
  properties: EvEsgDownloadsViewDocumentProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "-bNF84ub4", "2d6420298bc4b8f669488f03cc965b4e77e335446b58e94a5313de119c7beebb", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ev_esg_downloads_view_document", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("-bNF84ub4", "ev_esg_downloads_view_document", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ev_esg_downloads_view_document", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "-bNF84ub4", "2d6420298bc4b8f669488f03cc965b4e77e335446b58e94a5313de119c7beebb");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ev_esg_downloads_view_document", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerRemoveEntityProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_remove_entity: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {entity_name}
 *
 * When to trigger this event:
 * 1. click on X button next to the company name
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kI-yGvxUP/trigger/hMiTRMKyP
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kI-yGvxUP}
 */
export function screenerRemoveEntity(
  properties: ScreenerRemoveEntityProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kI-yGvxUP", "9e798afdfb864d9f4de01add5fe8b6d444e0b68651e80dea1ab5488102a0ceb7", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_remove_entity", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kI-yGvxUP", "screener_remove_entity", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_remove_entity", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kI-yGvxUP", "9e798afdfb864d9f4de01add5fe8b6d444e0b68651e80dea1ab5488102a0ceb7");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_remove_entity", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerChartviewDropdownProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_chartview_dropdown: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: { "LT Rating Distribution" or "Bank LT Rating Distribution" }
  id: undefined
  name: undefined
 *
 * When to trigger this event:
 * 1. User clicks on a cell with comment to open the side drawer
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/4XBQUgXJE/trigger/XsqLgcRIMD
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/4XBQUgXJE}
 */
export function screenerChartviewDropdown(
  properties: ScreenerChartviewDropdownProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "4XBQUgXJE", "d976373eecab7ef15ee97d0a6a7496c86a46cc30d6a99e297d865066d46f6886", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_chartview_dropdown", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("4XBQUgXJE", "screener_chartview_dropdown", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_chartview_dropdown", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "4XBQUgXJE", "d976373eecab7ef15ee97d0a6a7496c86a46cc30d6a99e297d865066d46f6886");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_chartview_dropdown", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface ScreenerCustomUrlProperties {
  dataAnalyticsLink: string;
}
/**
 * screener_custom_url: eventDetails:
  category: "Screener"
  type: "Txt"
  siteSection: undefined
  moduleName: undefined
  depth: {time_it_took_to_create} (in seconds)
  id: {"success" or "fail"}
  name: undefined

 *
 * When to trigger this event:
 * 1. Users click on URL button
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yCVsqb-4A/trigger/HMM0ljUnH
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/yCVsqb-4A}
 */
export function screenerCustomUrl(properties: ScreenerCustomUrlProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "yCVsqb-4A", "feb128a4ec2ea406d62907201a539606ea7b8d24d38affc22e8f9e25f67e10e8", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("screener_custom_url", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("yCVsqb-4A", "screener_custom_url", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("screener_custom_url", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "yCVsqb-4A", "feb128a4ec2ea406d62907201a539606ea7b8d24d38affc22e8f9e25f67e10e8");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("screener_custom_url", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface HeaderLogoClickProperties {
  dataAnalyticsLink: string;
}
/**
 * header_logo_click: eventDetails:
  category: "GlobalNav"
  type: "Img"
  siteSection: undefined
  moduleName: "Header"
  depth: undefined
  id: undefined
  name: "Home Page Logo"


Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. when someone clicks on Moody's Logo from the header
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/H_966QTyU/trigger/h91uV_Va6
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/H_966QTyU}
 */
export function headerLogoClick(properties: HeaderLogoClickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "H_966QTyU", "5139d729886095606f298cf06425c790eeb66bcdf73c64e09e02aa5d54097e75", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("header_logo_click", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("H_966QTyU", "header_logo_click", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("header_logo_click", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "H_966QTyU", "5139d729886095606f298cf06425c790eeb66bcdf73c64e09e02aa5d54097e75");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("header_logo_click", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchTypeaheadClickProperties {
  dataAnalyticsLink: string;
}
/**
 * search_typeahead_click: This event occurs when a user clicks on one of the results from the typeahead dropdown

eventDetails:
category:"ta_search"
type: { session_id }_{ user_id }_{ timestamp } the id of a specific search.  a session may contain many searches.  used to tie together with clicks
siteSection: the search that was entered into the typeahead input
moduleName: the position of the clicked result within its type
depth: type of clicked result such as org, research, etc
id: ID of clicked result with format { type_ID }. Example ID: research_R#PR_148908
name: displayed label of the clicked result



Prop Mapping for search implementation:
vertical: category
searchId: type
searchTerm: siteSection
position: moduleName
resultType: depth
id: id
title: name

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/TJvQFG0Iv}
 */
export function searchTypeaheadClick(
  properties: SearchTypeaheadClickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "TJvQFG0Iv", "7951b8d2dd5f17995eb7642de61dd85cbede3b9d3b67b5b145c282ab0b95f17e", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_typeahead_click", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("TJvQFG0Iv", "search_typeahead_click", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_typeahead_click", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "TJvQFG0Iv", "7951b8d2dd5f17995eb7642de61dd85cbede3b9d3b67b5b145c282ab0b95f17e");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_typeahead_click", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchTypeaheadSearchProperties {
  dataAnalyticsLink: string;
}
/**
 * search_typeahead_search: This event occurs when a user enters a search in the typeahead search box.  The frontend code should only trigger this event whenever we show a new set of typeahead results, or a no results component

eventDetails:
category:"ta_search"
type: { session_id }_{ user_id }_{ timestamp_in_ms }  the id of a specific search.  a session may contain many searches.  used to tie together with clicks
siteSection: the search that was entered into the typeahead input
moduleName: a list of IDs of format { type_ID } of all returned search results, in the same order they were displayed to a user.  Example ID: research_R#PR_148908
depth: the total number of results that a search returned over all types
id: undefined
name: undefined


Prop Mapping for search implementation:
vertical: category
searchId: type
searchTerm: siteSection
returnedResults: moduleName
resultCount: depth
id: id
name: name

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/SVxgnTEvHw}
 */
export function searchTypeaheadSearch(
  properties: SearchTypeaheadSearchProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "SVxgnTEvHw", "f4e86a4bc2f25aa1344b78d3ff3cdf956cb32d38da3db21eec980df7868e1d9e", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_typeahead_search", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("SVxgnTEvHw", "search_typeahead_search", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_typeahead_search", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "SVxgnTEvHw", "f4e86a4bc2f25aa1344b78d3ff3cdf956cb32d38da3db21eec980df7868e1d9e");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_typeahead_search", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchPaginateProperties {
  dataAnalyticsLink: string;
}
/**
 * search_paginate: This event occurs when a user paginates on the results page.

eventDetails:
category: the type of results that a user is viewing, such as, All, Organizations, Deals & Programs, Reports
type: id of the specific search
siteSection: undefined
moduleName: a list of IDs of format { type_ID } of all returned search results, in the same order they were displayed to a user.  Example ID: research_R#PR_148908
depth: {page number}
id: undefined
name: undefined

Prop Mapping for search implementation:
vertical: category
searchId: type
searchTerm: siteSection
returnedResults: moduleName
pageNumber: depth
id: id
name: name

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/YFC7PwfWQa}
 */
export function searchPaginate(properties: SearchPaginateProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "YFC7PwfWQa", "f322de176439574cd8463d2e379dad0f5265c38eecaa7afc8880c05879fbe539", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_paginate", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("YFC7PwfWQa", "search_paginate", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_paginate", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "YFC7PwfWQa", "f322de176439574cd8463d2e379dad0f5265c38eecaa7afc8880c05879fbe539");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_paginate", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchGlobalSearchProperties {
  dataAnalyticsLink: string;
}
/**
 * search_global_search: track every time a user navigates to the search results page, or alters their search

When a user performs any of the actions below, a search_global_search event is emitted.
- navigate to the search results page by hitting enter in the search input
- navigate to the search results page by clicking View All Results
- any other way to navigate from the search bar to the full results page
- a filter is applied to the search
- A user updates the sort on the search
- The user navigates to a new vertical (aka pill, aka tab)

eventDetails:
category: the type of results that a user is viewing, such as, All, Organizations, Deals & Programs, Reports
type: { session_id }_{ user_id }_{ timestamp_in_ms }  the id of a specific search.  a session may contain many searches.  used to tie together with clicks
siteSection: the search that was entered into the input
moduleName: a list of IDs of format { type_ID } of all returned search results, in the same order they were displayed to a user.  Example ID: research_R#PR_148908
depth: the total number of results that a search returned over all pages
id: all the filters that were used for this request
name: applied sort


Prop Mapping for search implementation:
vertical: category
searchId: type
searchTerm: siteSection
returnedResults: moduleName
resultCount: depth
appliedFilters: id
appliedSort: name

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/5I1ZzywL-F}
 */
export function searchGlobalSearch(properties: SearchGlobalSearchProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "5I1ZzywL-F", "090935a5be0accc5ecf20676f1309004197d132c2efda61bfa3ab6426176ea0b", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_global_search", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("5I1ZzywL-F", "search_global_search", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_global_search", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "5I1ZzywL-F", "090935a5be0accc5ecf20676f1309004197d132c2efda61bfa3ab6426176ea0b");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_global_search", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchGlobalClickProperties {
  dataAnalyticsLink: string;
}
/**
 * search_global_click: This event occurs when a user clicks on one of the results from the typeahead dropdown

eventDetails:
category: the type of results that a user is viewing, such as, All, Organizations, Deals & Programs, Reports
type: the id of a specific search.  a session may contain many searches.  used to tie together with clicks
siteSection: the search that was entered into the typeahead input
moduleName: the position, or ranking within the page of the clicked result
depth: the size of each page
id: ID of clicked result with format { type_ID }. Example ID: research_R#PR_148908
name:  displayed label of the clicked result




Prop Mapping for search implementation:
vertical:category
searchId: type
searchTerm: siteSection
position: moduleName
pageSize: depth
id: id
title:name


Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/Nzjgjn55J}
 */
export function searchGlobalClick(properties: SearchGlobalClickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "Nzjgjn55J", "3809ab6afea877bbbe8c86e2ea57a62b8205a308dfc545ee4a3e1c900c3219f4", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_global_click", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("Nzjgjn55J", "search_global_click", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_global_click", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "Nzjgjn55J", "3809ab6afea877bbbe8c86e2ea57a62b8205a308dfc545ee4a3e1c900c3219f4");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_global_click", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwNavigationBpProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_navigation_bp: eventDetails:
  category: "Gateway Drawer"
  type: undefined
  siteSection: undefined
  moduleName: "My Products"
  depth: undefined
  id: undefined
  name: "BankingPortal"

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating" }
 *
 * When to trigger this event:
 * 1. CTA
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/_ficW8ZOR/trigger/dHlJa_N80
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/_ficW8ZOR}
 */
export function gwNavigationBp(properties: GwNavigationBpProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "_ficW8ZOR", "70ed94c9a6b056e152cea5965b66d55dc5920e91a91d83078b6704c157e0b681", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_navigation_bp", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("_ficW8ZOR", "gw_navigation_bp", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_navigation_bp", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "_ficW8ZOR", "70ed94c9a6b056e152cea5965b66d55dc5920e91a91d83078b6704c157e0b681");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_navigation_bp", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface GwNavigationBpSolutionsProperties {
  dataAnalyticsLink: string;
}
/**
 * gw_navigation_bp_solutions: eventDetails:
  category: "Gateway Drawer"
  type: undefined
  siteSection: {Solution Environment}
  moduleName: "BankingPortal"
  depth: undefined
  id: undefined
  name: {Banking Portal solution name clicked}

Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/3hr1UxUhx/trigger/AMYvGuPJK
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/3hr1UxUhx}
 */
export function gwNavigationBpSolutions(
  properties: GwNavigationBpSolutionsProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "3hr1UxUhx", "3a19aa96e9bf1a84a6151602f4b01cd2d254b4b25b48981eb653acca7a2b75ae", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("gw_navigation_bp_solutions", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("3hr1UxUhx", "gw_navigation_bp_solutions", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("gw_navigation_bp_solutions", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "3hr1UxUhx", "3a19aa96e9bf1a84a6151602f4b01cd2d254b4b25b48981eb653acca7a2b75ae");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("gw_navigation_bp_solutions", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RaQuestionProperties {
  dataAnalyticsLink: string;
}
/**
 * ra_question: This event occurs when a user sends a question to RA

eventDetails:
  category: "RA"
  type: { session_id }{ user_id }{ timestamp } the id of a specific search.  a session may contain many questions.
  siteSection: undefined
  moduleName: undefined
  depth: {"typed" or "suggested" or “followup”}
  id: undefined
  name: {question}

 *
 * When to trigger this event:
 * 1. click on one of suggested question
type in and send
click on one of follow up questions
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/C1j8QKRTT/trigger/CbzdGegMz
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/C1j8QKRTT}
 */
export function raQuestion(properties: RaQuestionProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "C1j8QKRTT", "c85e1b579bbef7c05f8025a5f7ef484b6fc182982b3375bf0b6c5c6dfb6ca1db", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ra_question", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("C1j8QKRTT", "ra_question", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ra_question", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "C1j8QKRTT", "c85e1b579bbef7c05f8025a5f7ef484b6fc182982b3375bf0b6c5c6dfb6ca1db");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ra_question", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchIdentifierPopUpClickProperties {
  dataAnalyticsLink: string;
}
/**
 * search_identifier_pop_up_click: This event occurs when a user clicks the link within the pop up that appears on an issuer page after a search for a deal identifier.  The goal is to measure engagement with this element to see if we should take users directly to that destination instead

eventDetails:
category: "search_popup"
type: id of the specific search
siteSection: undefined
moduleName: undefined
id: {identifier value}
name: {identifierType, for example,  isin, figi, etc}


Prop Mapping for search implementation:
searchId: type


Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/nmHn1xFCf/trigger/VuQW8-Udb
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/nmHn1xFCf}
 */
export function searchIdentifierPopUpClick(
  properties: SearchIdentifierPopUpClickProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "nmHn1xFCf", "dce5715f9bd0258c5f3764a403502ecb568a7f7e095a8474945de68ceae9b0ed", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_identifier_pop_up_click", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("nmHn1xFCf", "search_identifier_pop_up_click", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_identifier_pop_up_click", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "nmHn1xFCf", "dce5715f9bd0258c5f3764a403502ecb568a7f7e095a8474945de68ceae9b0ed");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_identifier_pop_up_click", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface SearchIdentifierPopUpRenderProperties {
  dataAnalyticsLink: string;
}
/**
 * search_identifier_pop_up_render: This event occurs when the issuer page renders the pop up that appears after a search for a deal identifier.  The goal is to measure engagement with this element to see if we should take users directly to that destination instead

eventDetails:
category: "search_popup"
type: id of the specific search
siteSection: undefined
moduleName: undefined
id: {identifier value}
name: {identifierType, for example,  isin, figi, etc}


Prop Mapping for search implementation:
searchId: type


Note:
- Double quoted items represent static strings, ex: "Sector View"
- Items with double curly braces represent variables, ex: { deal_id }
- Items with both represent static string, but can vary, ex: { "Issuance" or "Rating"}
 *
 * When to trigger this event:
 * 1.
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kjC2ITXYr/trigger/pzPliLVAFr
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/kjC2ITXYr}
 */
export function searchIdentifierPopUpRender(
  properties: SearchIdentifierPopUpRenderProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "kjC2ITXYr", "b865e7f725db777fb583b57b633e961d12ff9f6eda722c776cf49673c8323064", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("search_identifier_pop_up_render", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("kjC2ITXYr", "search_identifier_pop_up_render", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("search_identifier_pop_up_render", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "kjC2ITXYr", "b865e7f725db777fb583b57b633e961d12ff9f6eda722c776cf49673c8323064");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("search_identifier_pop_up_render", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RaAnswerProperties {
  dataAnalyticsLink: string;
}
/**
 * ra_answer: answer is completed and given to user

eventDetails:
  category: "RA"
  type: { session_id }{ user_id }{ timestamp } the id of a specific search.  a session may contain many questions.
  siteSection: undefined
  moduleName: undefined
  depth: {"success" or "fail"}{error_type}{time_it_took_to_answer} (in seconds)
  id: {followup_questions}
  name: {api_used}{confidence rate} {citations} {relevant_links}
 *
 * When to trigger this event:
 * 1. answer is given
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/WsSsScJsS/trigger/AW_2qlUy-
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/WsSsScJsS}
 */
export function raAnswer(properties: RaAnswerProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "WsSsScJsS", "ba8997ca025f0ac0fccb39fd76123a0bb72d091c16f832a96ad7e7a5f3a71838", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ra_answer", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("WsSsScJsS", "ra_answer", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ra_answer", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "WsSsScJsS", "ba8997ca025f0ac0fccb39fd76123a0bb72d091c16f832a96ad7e7a5f3a71838");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ra_answer", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RaFeedbackProperties {
  dataAnalyticsLink: string;
}
/**
 * ra_feedback: User selects "up" or "down" thumbs
OR
User selects a feedback_chip
OR
User sends custom feedback

eventDetails:
  category: "RA"
  type: { session_id }{ user_id }{ timestamp } the id of a specific search.  a session may contain many questions.
  siteSection: undefined
  moduleName: undefined
  depth: {feedback_chip}
  id: {"up" or "down"}
  name: {feedback_typed_in}

 *
 * When to trigger this event:
 * 1.  User selects "up" or "down" thumbs
OR
User selects a feedback_chip
OR 
User sends custom feedback
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/GhIJkrCzx/trigger/QybeLZJhI
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/GhIJkrCzx}
 */
export function raFeedback(properties: RaFeedbackProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "GhIJkrCzx", "b163a9b7c6d5c688b0f9024c039b8a12376ea26dad0a3ff8982ca581c8dccb67", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ra_feedback", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("GhIJkrCzx", "ra_feedback", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ra_feedback", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "GhIJkrCzx", "b163a9b7c6d5c688b0f9024c039b8a12376ea26dad0a3ff8982ca581c8dccb67");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ra_feedback", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RaResetProperties {
  dataAnalyticsLink: string;
}
/**
 * ra_reset: User click Reset button

eventDetails:
  category: "RA"
  type: { session_id }{ user_id }{ timestamp } the id of a specific search.  a session may contain many questions.
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {Reset_button}


 *
 * When to trigger this event:
 * 1. User click Reset button
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1pSGQx_kO/trigger/ihYeFDdgP
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/1pSGQx_kO}
 */
export function raReset(properties: RaResetProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "1pSGQx_kO", "077887bc9e4f4cf9d0af67bcddbe984f9326e3880c29a4fc64ead25bf753fa74", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ra_reset", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("1pSGQx_kO", "ra_reset", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ra_reset", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "1pSGQx_kO", "077887bc9e4f4cf9d0af67bcddbe984f9326e3880c29a4fc64ead25bf753fa74");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ra_reset", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RaLinkProperties {
  dataAnalyticsLink: string;
}
/**
 * ra_link: user clicks on a link on citation or related content

eventDetails:
  category: "RA"
  type: { session_id }{ user_id }{ timestamp } the id of a specific search.  a session may contain many questions.
  siteSection: undefined
  moduleName:  {type} - CO, RA, company page
  depth:{date}
  id: ID of clicked result with format { type_ID }{title}. Example ID: research_R#PR_148908
name: displayed label of the clicked result

 *
 * When to trigger this event:
 * 1. user clicks on a link on citation or related content
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/L-qqIy8Ua/trigger/h4laC33rW
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/L-qqIy8Ua}
 */
export function raLink(properties: RaLinkProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "L-qqIy8Ua", "6eab890807ac91ace082feeeedd767494b4514a40eafaf1911677b3ce2c637a1", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ra_link", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("L-qqIy8Ua", "ra_link", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ra_link", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "L-qqIy8Ua", "6eab890807ac91ace082feeeedd767494b4514a40eafaf1911677b3ce2c637a1");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ra_link", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export interface RaFullscreenProperties {
  dataAnalyticsLink: string;
}
/**
 * ra_fullscreen: User clicks on full screen button

eventDetails:
  category: "RA"
  type: { session_id }{ user_id }{ timestamp } the id of a specific search.  a session may contain many questions.
  siteSection: undefined
  moduleName: undefined
  depth: undefined
  id: undefined
  name: {"full" or "small"}

 *
 * When to trigger this event:
 * 1. User clicks on full screen button
 * View in Avo: https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ffZCk-wAc/trigger/FYFCPYwMH
 *
 * @param properties the properties associatied with this event
 * @param properties.dataAnalyticsLink: Tag value to be populated on click of CTA
 *
 * @see {@link https://www.avo.app/schemas/HG3IQB5agPHQutHhkkLP/events/ffZCk-wAc}
 */
export function raFullscreen(properties: RaFullscreenProperties) {
  // assert properties
  if (__AVO_ENV__ !== AvoEnv.Prod || __WEB_DEBUGGER__) {
    let messages: AvoAssertMessage[] = [];
    // debug console in Avo
    if (!__AVO_NOOP__) {
      _avo_invoke(__AVO_ENV__, "ffZCk-wAc", "29e1cd0b10f918f8a55379f8b5ffb94804fc251b2f768e1ca8a868a8b6d17b77", messages.map(m => Object.assign({}, {tag: m.tag, propertyId: m.propertyId, additionalProperties: m.additionalProperties, actualType: m.actualType})), 'event');
    }
    InternalAvoLogger.logEventSent("ra_fullscreen", {
      "data-analytics-link": properties.dataAnalyticsLink,
      }, {});
    if (__WEB_DEBUGGER__) {
      // Avo web debugger
      _avo_debugger_log("ffZCk-wAc", "ra_fullscreen", messages, [
      {id: "zfFhnTU6RO", name: "data-analytics-link", value: properties.dataAnalyticsLink},
      ], [], []);
    }
  }

  // @ts-ignore
  let eventProperties: any = {};
  eventProperties["data-analytics-link"] = properties.dataAnalyticsLink;

  // @ts-ignore
  let userProperties: any = {};

  if (!__AVO_NOOP__) {
    if (__INSPECTOR__ != null) {
      // @ts-ignore
      __INSPECTOR__._avoFunctionTrackSchemaFromEvent("ra_fullscreen", {
        "data-analytics-link": properties.dataAnalyticsLink,
        }, "ffZCk-wAc", "29e1cd0b10f918f8a55379f8b5ffb94804fc251b2f768e1ca8a868a8b6d17b77");
    }
    // destination AdobeAnalytics
    AdobeAnalytics.logEvent("ra_fullscreen", (Object as any).assign({}, eventProperties));
  } else {
    // do nothing
  }
}

export default {
  AvoEnv,
  initAvo,
  avoInspectorApiKey,
  globalPageLoaded,
  svIssuanceActivityToggleTable,
  svIssuanceActivityExpandTranche,
  svPerformanceTableView,
  svRelatedResearchCategory,
  svMethodologiesCategory,
  svPerformanceToggleTrendlines,
  svRegionSelected,
  svSelectSector,
  svRelatedModels,
  svHighlightsOutlook,
  svHighlightsUpdate,
  svIssuanceActivityKeyContacts,
  svIssuanceActivityDealName,
  svIssuanceActivityReports,
  svIssuanceActivityRatingAndAssessmentNews,
  svIssuanceActivityRelatedDeals,
  svRelatedResearchReadReport,
  svRelatedResearchViewMore,
  svEventRegisterNow,
  svEventViewMore,
  svMethodologiesReport,
  svIssuanceActivityViewMore,
  svIssuanceActivityViewReports,
  svDealPageWidgetLink,
  svHighlightsOutlookViewAll,
  svHighlightsUpdateViewAll,
  svIssuanceActivityExport,
  svPerformanceHighlightsDownload,
  svHighlightsPodcast,
  svHighlightsDrawer,
  placeholderEvent,
  gwMarketingMediaContent,
  gwNavigationCv,
  gwNavigationEdfx,
  gwMarketingProductContent,
  gwOpenWaffle,
  screenerFilterOpened,
  screenerIIcon,
  screenerGroupedColumns,
  screenerScoreCommentOpened,
  screenerEditColumns,
  screenerRowsPerPage,
  screenerPage,
  screenerSort,
  screenerExport,
  screenerFilterSearch,
  screenerFilterSelected,
  rdTopfilter,
  rdColumnfilter,
  rdResetfilterbutton,
  rdDaterange,
  rdTranslations,
  rdReportclick,
  rdPagination,
  rdRowsperpage,
  rdSearchkeyword,
  rdAuthorizedss,
  rdPageresetbutton,
  screenerChartview,
  screenerChartviewTabs,
  financialsTabSectionExpandAll,
  financialsTabSectionCollapseAll,
  financialsTabTopBarNavigation,
  financialsTabSectionUngroupStatements,
  financialsTabSourceDocumentView,
  financialsTabSectionUngroupRatios,
  financialsTabCurrencyChange,
  financialsKeyIndicatorsWidgetExport,
  financialsPeerComparisonWidgetExport,
  financialsPeerComparisonWidgetToggleViewClick,
  financialsTabExport,
  financialsKeyIndicatorsWidgetCtaClick,
  evEsgAssessmentOverallViewMethodologySummary,
  evEsgInCreditCisViewMethodologySummary,
  evEsgAssessmentOverallViewMethodologyDocument,
  evEsgAssessmentIncidentsViewMethodologySummary,
  evEsgAssessmentOverallViewCompanyReport,
  evEsgAssessmentOverallViewSectorReport,
  evEsgAssessmentPillarFilterDrivers,
  evEsgAssessmentPillarViewDriverDetail,
  evEsgAssessmentLatestIncidentsViewIncidentDetail,
  evEsgAssessmentLatestIncidentsFilter,
  evEsgAssessmentDriverDetailViewIncidentDetail,
  evEsgAssessmentDriverDetailGotoNextPrev,
  evEsgInCreditCisViewCommentary,
  evEsgInCreditCisViewMethodologyDocument,
  evEsgInCreditCisViewHeatMapDocument,
  evEsgInCreditCisViewInfographic,
  evEsgInCreditCisViewScoreScale,
  evEsgInCreditCisDistributionFilterChart,
  evEsgInCreditCisDistributionFilterScore,
  evEsgInCreditCisDistributionSort,
  evEsgInCreditCisDistributionDetailGotoScreener,
  evEsgInCreditCisDistributionDetailGotoEvOrCv,
  evEsgInCreditIpsDistributionFilterChart,
  evEsgInCreditIpsDistributionFilterScore,
  evEsgInCreditIpsDistributionSort,
  evEsgDocumentsViewDocument,
  evEsgInCreditIpsDistributionDetailGotoEvOrCv,
  evTabs,
  evEsgInCreditIpsViewMethodologySummary,
  evEsgInCreditIpsViewCommentary,
  evEsgInCreditIpsViewCtiScorecard,
  evEsgInCreditIpsViewCriteriaCommentary,
  evEsgInCreditIpsViewCtiFrameworkDocument,
  evEsgInCreditIpsViewMethodologyDocument,
  evEsgInCreditIpsViewHeatMapDocument,
  evEsgInCreditIpsInfographic,
  evEsgInCreditIpsViewScoreScale,
  evEsgInCreditPeerComparisonExport,
  evEsgInCreditPeerComparisonGotoScreener,
  evEsgInCreditPeerComparisonExpandCollapse,
  evEsgInCreditPeerComparisonGotoEvOrCv,
  evEsgInCreditPeerComparisonViewCisCommentary,
  evEsgInCreditPeerComparisonViewIpsCommentary,
  evEsgInCreditPeerComparisonIpsViewCriteriaCommentary,
  evEsgInCreditPeerComparisonViewMethodologyDocument,
  evEsgInCreditPeerComparisonAddPeer,
  evEsgInCreditPeerComparisonExpandSubscription,
  evEsgInCreditPeerComparisonViewHeatMapDocument,
  evEsgInCreditSectorHeatMapViewSummary,
  evEsgInCreditSectorHeatMapFilterCategories,
  evEsgInCreditSectorHeatMapViewCommentary,
  evEsgInCreditSectorViewHeatMapDocument,
  evEsgInCreditSectorHeatMapViewScoreScale,
  evEsgInCreditRelatedResearchGotoCv,
  evEsgInCreditIpsFilterCriteria,
  evEsgDownloadsViewDocument,
  screenerRemoveEntity,
  screenerChartviewDropdown,
  screenerCustomUrl,
  headerLogoClick,
  searchTypeaheadClick,
  searchTypeaheadSearch,
  searchPaginate,
  searchGlobalSearch,
  searchGlobalClick,
  gwNavigationBp,
  gwNavigationBpSolutions,
  raQuestion,
  searchIdentifierPopUpClick,
  searchIdentifierPopUpRender,
  raAnswer,
  raFeedback,
  raReset,
  raLink,
  raFullscreen,
}

// AVOMODULEMAP:"Avo"
// AVOEVENTMAP:["globalPageLoaded","svIssuanceActivityToggleTable","svIssuanceActivityExpandTranche","svPerformanceTableView","svRelatedResearchCategory","svMethodologiesCategory","svPerformanceToggleTrendlines","svRegionSelected","svSelectSector","svRelatedModels","svHighlightsOutlook","svHighlightsUpdate","svIssuanceActivityKeyContacts","svIssuanceActivityDealName","svIssuanceActivityReports","svIssuanceActivityRatingAndAssessmentNews","svIssuanceActivityRelatedDeals","svRelatedResearchReadReport","svRelatedResearchViewMore","svEventRegisterNow","svEventViewMore","svMethodologiesReport","svIssuanceActivityViewMore","svIssuanceActivityViewReports","svDealPageWidgetLink","svHighlightsOutlookViewAll","svHighlightsUpdateViewAll","svIssuanceActivityExport","svPerformanceHighlightsDownload","svHighlightsPodcast","svHighlightsDrawer","placeholderEvent","gwMarketingMediaContent","gwNavigationCv","gwNavigationEdfx","gwMarketingProductContent","gwOpenWaffle","screenerFilterOpened","screenerIIcon","screenerGroupedColumns","screenerScoreCommentOpened","screenerEditColumns","screenerRowsPerPage","screenerPage","screenerSort","screenerExport","screenerFilterSearch","screenerFilterSelected","rdTopfilter","rdColumnfilter","rdResetfilterbutton","rdDaterange","rdTranslations","rdReportclick","rdPagination","rdRowsperpage","rdSearchkeyword","rdAuthorizedss","rdPageresetbutton","screenerChartview","screenerChartviewTabs","financialsTabSectionExpandAll","financialsTabSectionCollapseAll","financialsTabTopBarNavigation","financialsTabSectionUngroupStatements","financialsTabSourceDocumentView","financialsTabSectionUngroupRatios","financialsTabCurrencyChange","financialsKeyIndicatorsWidgetExport","financialsPeerComparisonWidgetExport","financialsPeerComparisonWidgetToggleViewClick","financialsTabExport","financialsKeyIndicatorsWidgetCtaClick","evEsgAssessmentOverallViewMethodologySummary","evEsgInCreditCisViewMethodologySummary","evEsgAssessmentOverallViewMethodologyDocument","evEsgAssessmentIncidentsViewMethodologySummary","evEsgAssessmentOverallViewCompanyReport","evEsgAssessmentOverallViewSectorReport","evEsgAssessmentPillarFilterDrivers","evEsgAssessmentPillarViewDriverDetail","evEsgAssessmentLatestIncidentsViewIncidentDetail","evEsgAssessmentLatestIncidentsFilter","evEsgAssessmentDriverDetailViewIncidentDetail","evEsgAssessmentDriverDetailGotoNextPrev","evEsgInCreditCisViewCommentary","evEsgInCreditCisViewMethodologyDocument","evEsgInCreditCisViewHeatMapDocument","evEsgInCreditCisViewInfographic","evEsgInCreditCisViewScoreScale","evEsgInCreditCisDistributionFilterChart","evEsgInCreditCisDistributionFilterScore","evEsgInCreditCisDistributionSort","evEsgInCreditCisDistributionDetailGotoScreener","evEsgInCreditCisDistributionDetailGotoEvOrCv","evEsgInCreditIpsDistributionFilterChart","evEsgInCreditIpsDistributionFilterScore","evEsgInCreditIpsDistributionSort","evEsgDocumentsViewDocument","evEsgInCreditIpsDistributionDetailGotoEvOrCv","evTabs","evEsgInCreditIpsViewMethodologySummary","evEsgInCreditIpsViewCommentary","evEsgInCreditIpsViewCtiScorecard","evEsgInCreditIpsViewCriteriaCommentary","evEsgInCreditIpsViewCtiFrameworkDocument","evEsgInCreditIpsViewMethodologyDocument","evEsgInCreditIpsViewHeatMapDocument","evEsgInCreditIpsInfographic","evEsgInCreditIpsViewScoreScale","evEsgInCreditPeerComparisonExport","evEsgInCreditPeerComparisonGotoScreener","evEsgInCreditPeerComparisonExpandCollapse","evEsgInCreditPeerComparisonGotoEvOrCv","evEsgInCreditPeerComparisonViewCisCommentary","evEsgInCreditPeerComparisonViewIpsCommentary","evEsgInCreditPeerComparisonIpsViewCriteriaCommentary","evEsgInCreditPeerComparisonViewMethodologyDocument","evEsgInCreditPeerComparisonAddPeer","evEsgInCreditPeerComparisonExpandSubscription","evEsgInCreditPeerComparisonViewHeatMapDocument","evEsgInCreditSectorHeatMapViewSummary","evEsgInCreditSectorHeatMapFilterCategories","evEsgInCreditSectorHeatMapViewCommentary","evEsgInCreditSectorViewHeatMapDocument","evEsgInCreditSectorHeatMapViewScoreScale","evEsgInCreditRelatedResearchGotoCv","evEsgInCreditIpsFilterCriteria","evEsgDownloadsViewDocument","screenerRemoveEntity","screenerChartviewDropdown","screenerCustomUrl","headerLogoClick","searchTypeaheadClick","searchTypeaheadSearch","searchPaginate","searchGlobalSearch","searchGlobalClick","gwNavigationBp","gwNavigationBpSolutions","raQuestion","searchIdentifierPopUpClick","searchIdentifierPopUpRender","raAnswer","raFeedback","raReset","raLink","raFullscreen"]
